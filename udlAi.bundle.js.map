{"version":3,"file":"udlAi.bundle.js","mappings":"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","sources":["webpack://udl/./src/udl-ai.js"],"sourcesContent":["javascript:(function(){\r\n    // 이미 실행 중인지 확인\r\n    if (document.getElementById('udl-accessibility-panel')) {\r\n      document.getElementById('udl-accessibility-panel').remove();\r\n      removeHighlights();\r\n      return;\r\n    }\r\n    \r\n    // API 키 확인 및 입력 요청\r\n    let userApiKey = sessionStorage.getItem('udl_api_key');\r\n    if (!userApiKey) {\r\n      userApiKey = prompt('UDL 분석을 위한 API KEY를 입력해주세요.');\r\n      if (!userApiKey) {\r\n        alert('API KEY가 입력되지 않았습니다. UDL 분석을 실행할 수 없습니다.');\r\n        return;\r\n      }\r\n      sessionStorage.setItem('udl_api_key', userApiKey);\r\n    }\r\n  \r\n    // axe-core 스크립트 로드 (CDN 사용)\r\n    function loadAxeCore() {\r\n      return new Promise((resolve, reject) => {\r\n        if (window.axe) {\r\n          return resolve(window.axe);\r\n        }\r\n        \r\n        const axeScript = document.createElement('script');\r\n        axeScript.src = 'https://cdnjs.cloudflare.com/ajax/libs/axe-core/4.7.0/axe.min.js';\r\n        axeScript.onload = () => resolve(window.axe);\r\n        axeScript.onerror = () => reject(new Error('axe-core 로드 실패'));\r\n        document.head.appendChild(axeScript);\r\n      });\r\n    }\r\n  \r\n    // Gemini API 키\r\n    const API_KEY = userApiKey;\r\n    \r\n    // 한국형 웹 콘텐츠 접근성 지침 2.2 카테고리\r\n    const KWCAG22 = {\r\n      perception: {\r\n        name: \"인식의 용이성\",\r\n        items: [\r\n          { id: \"1.1.1\", name: \"적절한 대체 텍스트 제공\", desc: \"텍스트 아닌 콘텐츠는 그 의미나 용도를 인식할 수 있도록 대체 텍스트를 제공해야 한다.\" },\r\n          { id: \"1.2.1\", name: \"자막 제공\", desc: \"멀티미디어 콘텐츠에는 자막, 대본 또는 수어를 제공해야 한다.\" },\r\n          { id: \"1.3.1\", name: \"표의 구성\", desc: \"표는 이해하기 쉽게 구성해야 한다.\" },\r\n          { id: \"1.3.2\", name: \"콘텐츠의 선형구조\", desc: \"콘텐츠는 논리적인 순서로 제공해야 한다.\" },\r\n          { id: \"1.3.3\", name: \"명확한 지시사항 제공\", desc: \"지시사항은 모양, 크기, 위치, 방향, 색, 소리 등에 관계없이 인식될 수 있어야 한다.\" },\r\n          { id: \"1.4.1\", name: \"색에 무관한 콘텐츠 인식\", desc: \"콘텐츠는 색에 관계없이 인식될 수 있어야 한다.\" },\r\n          { id: \"1.4.2\", name: \"자동 재생 금지\", desc: \"자동으로 소리가 재생되지 않아야 한다.\" },\r\n          { id: \"1.4.3\", name: \"텍스트 콘텐츠의 명도 대비\", desc: \"텍스트 콘텐츠와 배경 간의 명도 대비는 4.5 대 1 이상이어야 한다.\" },\r\n          { id: \"1.4.4\", name: \"콘텐츠 간의 구분\", desc: \"이웃한 콘텐츠는 구별될 수 있어야 한다.\" }\r\n        ]\r\n      },\r\n      operation: {\r\n        name: \"운용의 용이성\",\r\n        items: [\r\n          { id: \"2.1.1\", name: \"키보드 사용 보장\", desc: \"모든 기능은 키보드만으로도 사용할 수 있어야 한다.\" },\r\n          { id: \"2.1.2\", name: \"초점 이동과 표시\", desc: \"키보드에 의한 초점은 논리적으로 이동해야 하며, 시각적으로 구별할 수 있어야 한다.\" },\r\n          { id: \"2.1.3\", name: \"조작 가능\", desc: \"사용자 입력 및 컨트롤은 조작 가능하도록 제공되어야 한다.\" },\r\n          { id: \"2.1.4\", name: \"문자 단축키\", desc: \"문자 단축키는 오동작으로 인한 오류를 방지하여야 한다.\" },\r\n          { id: \"2.2.1\", name: \"응답시간 조절\", desc: \"시간제한이 있는 콘텐츠는 응답시간을 조절할 수 있어야 한다.\" },\r\n          { id: \"2.2.2\", name: \"정지 기능 제공\", desc: \"자동으로 변경되는 콘텐츠는 움직임을 제어할 수 있어야 한다.\" },\r\n          { id: \"2.3.1\", name: \"깜빡임과 번쩍임 사용 제한\", desc: \"초당 3~50회 주기로 깜빡이거나 번쩍이는 콘텐츠를 제공하지 않아야 한다.\" },\r\n          { id: \"2.4.1\", name: \"반복 영역 건너뛰기\", desc: \"콘텐츠의 반복되는 영역은 건너뛸 수 있어야 한다.\" },\r\n          { id: \"2.4.2\", name: \"제목 제공\", desc: \"페이지, 프레임, 콘텐츠 블록에는 적절한 제목을 제공해야 한다.\" },\r\n          { id: \"2.4.3\", name: \"적절한 링크 텍스트\", desc: \"링크 텍스트는 용도나 목적을 이해할 수 있도록 제공해야 한다.\" },\r\n          { id: \"2.4.4\", name: \"고정된 참조 위치 정보\", desc: \"전자출판문서 형식의 웹 페이지는 각 페이지로 이동할 수 있는 기능이 있어야 하고, 서식이나 플랫폼에 상관없이 참조 위치 정보를 일관되게 제공ㆍ유지해야 한다.\" },\r\n          { id: \"2.5.1\", name: \"단일 포인터 입력 지원\", desc: \"다중 포인터 또는 경로기반 동작을 통한 입력은 단일 포인터 입력으로도 조작할 수 있어야 한다.\" },\r\n          { id: \"2.5.2\", name: \"포인터 입력 취소\", desc: \"단일 포인터 입력으로 실행되는 기능은 취소할 수 있어야 한다.\" },\r\n          { id: \"2.5.3\", name: \"레이블과 네임\", desc: \"텍스트 또는 텍스트 이미지가 포함된 레이블이 있는 사용자 인터페이스 구성요소는 네임에 시각적으로 표시되는 해당 텍스트를 포함해야 한다.\" },\r\n          { id: \"2.5.4\", name: \"동작기반 작동\", desc: \"동작기반으로 작동하는 기능은 사용자 인터페이스 구성요소로 조작할 수 있고, 동작기반 기능을 비활성화할 수 있어야 한다.\" }\r\n        ]\r\n      },\r\n      comprehension: {\r\n        name: \"이해의 용이성\",\r\n        items: [\r\n          { id: \"3.1.1\", name: \"기본 언어 표시\", desc: \"주로 사용하는 언어를 명시해야 한다.\" },\r\n          { id: \"3.2.1\", name: \"사용자 요구에 따른 실행\", desc: \"사용자가 의도하지 않은 기능(새 창, 초점에 의한 맥락 변화 등)은 실행되지 않아야 한다.\" },\r\n          { id: \"3.2.2\", name: \"찾기 쉬운 도움 정보\", desc: \"도움 정보가 제공되는 경우, 각 페이지에서 동일한 상대적인 순서로 접근할 수 있어야 한다.\" },\r\n          { id: \"3.3.1\", name: \"오류 정정\", desc: \"입력 오류를 정정할 수 있는 방법을 제공해야 한다.\" },\r\n          { id: \"3.3.2\", name: \"레이블 제공\", desc: \"사용자 입력에는 대응하는 레이블을 제공해야 한다.\" },\r\n          { id: \"3.3.3\", name: \"접근 가능한 인증\", desc: \"인증 과정은 인지 기능 테스트에만 의존해서는 안 된다.\" },\r\n          { id: \"3.3.4\", name: \"반복 입력 정보\", desc: \"반복되는 입력 정보는 자동 입력 또는 선택 입력할 수 있어야 한다.\" }\r\n        ]\r\n      },\r\n      robustness: {\r\n        name: \"견고성\",\r\n        items: [\r\n          { id: \"4.1.1\", name: \"마크업 오류 방지\", desc: \"마크업 언어의 요소는 열고 닫음, 중첩 관계 및 속성 선언에 오류가 없어야 한다.\" },\r\n          { id: \"4.2.1\", name: \"웹 애플리케이션 접근성 준수\", desc: \"콘텐츠에 포함된 웹 애플리케이션은 접근성이 있어야 한다.\" }\r\n        ]\r\n      }\r\n    };\r\n  \r\n    // UDL 원칙\r\n    const UDL_PRINCIPLES = {\r\n      engagement: {\r\n        name: \"다양한 방식의 학습 참여 수단\",\r\n        desc: \"학습자의 흥미와 동기를 유발하고 적극적인 참여를 촉진하기 위해 다양한 방법 제공\",\r\n        suggestions: [\r\n          \"흥미 유발을 위한 선택권 제공하기\",\r\n          \"지속적으로 노력하고 끈기를 갖도록 하는 선택권 제공하기\",\r\n          \"자기조절 능력을 키우기 위한 선택권 제공하기\"\r\n        ]\r\n      },\r\n      representation: {\r\n        name: \"다양한 방식의 표상 수단\",\r\n        desc: \"학습 내용을 다양한 방식으로 제공하여 모든 학습자가 정보를 이해할 수 있도록 지원\",\r\n        suggestions: [\r\n          \"정보를 인지하는 것의 선택권 제공하기\",\r\n          \"언어와 기호의 선택권 제공하기\",\r\n          \"이해를 돕기 위해 다양한 선택권 제공하기\"\r\n        ]\r\n      },\r\n      action: {\r\n        name: \"다양한 방식의 행동과 표현 수단\",\r\n        desc: \"학습자가 자신의 지식과 이해를 표현하는 방법에 다양한 선택권 제공\",\r\n        suggestions: [\r\n          \"신체적 표현 방식에서 선택권 제공하기\",\r\n          \"표현과 의사소통의 선택권 제공하기\",\r\n          \"실행기능에 따른 선택권 제공하기\"\r\n        ]\r\n      }\r\n    };\r\n  \r\n    // 스타일 추가\r\n    const style = document.createElement('style');\r\n    style.textContent = `\r\n      /* 패널 기본 스타일 */\r\n      #udl-accessibility-panel {\r\n        position: fixed;\r\n        top: 20px;\r\n        right: 20px;\r\n        width: 600px;\r\n        max-width: 90vw;\r\n        height: 90vh;\r\n        background: white;\r\n        border-radius: 8px;\r\n        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);\r\n        display: flex;\r\n        flex-direction: column;\r\n        z-index: 99999;\r\n        overflow: hidden;\r\n        resize: both;\r\n        min-width: 300px;\r\n        min-height: 300px;\r\n        font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif;\r\n        font-size: 14px;\r\n        line-height: 1.5;\r\n        color: #212529;\r\n      }\r\n      .panel-header {\r\n        padding: 16px 20px;\r\n        background: linear-gradient(135deg, #3a7bd5, #2c5282);\r\n        color: white;\r\n        font-weight: bold;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        cursor: move;\r\n      }\r\n      .panel-title {\r\n        font-size: 16px;\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 8px;\r\n      }\r\n      .panel-controls {\r\n        display: flex;\r\n        gap: 8px;\r\n      }\r\n      .panel-btn {\r\n        background: none;\r\n        border: none;\r\n        color: white;\r\n        font-size: 18px;\r\n        cursor: pointer;\r\n        width: 24px;\r\n        height: 24px;\r\n        border-radius: 4px;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        transition: background 0.2s;\r\n      }\r\n      .panel-btn:hover {\r\n        background: rgba(255,255,255,0.2);\r\n      }\r\n      .panel-tabs {\r\n        display: flex;\r\n        background-color: #f8f9fa;\r\n        border-bottom: 1px solid #e9ecef;\r\n        padding: 0 4px;\r\n      }\r\n      .panel-tabs button {\r\n        flex: 1;\r\n        padding: 12px 8px;\r\n        border: none;\r\n        background: none;\r\n        cursor: pointer;\r\n        font-weight: 500;\r\n        color: #495057;\r\n        position: relative;\r\n        transition: all 0.2s;\r\n      }\r\n      .panel-tabs button:hover {\r\n        color: #3a7bd5;\r\n        background-color: rgba(58, 123, 213, 0.05);\r\n      }\r\n      .panel-tabs button.tab-active {\r\n        color: #3a7bd5;\r\n        font-weight: 600;\r\n      }\r\n      .panel-tabs button.tab-active::after {\r\n        content: '';\r\n        position: absolute;\r\n        bottom: 0;\r\n        left: 10%;\r\n        width: 80%;\r\n        height: 3px;\r\n        background-color: #3a7bd5;\r\n        border-radius: 3px 3px 0 0;\r\n      }\r\n      .tab-content {\r\n        flex: 1;\r\n        overflow-y: auto;\r\n        padding: 16px;\r\n        background-color: #ffffff;\r\n      }\r\n      .panel-footer {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        padding: 12px 16px;\r\n        border-top: 1px solid #e9ecef;\r\n        background-color: #f8f9fa;\r\n        gap: 8px;\r\n      }\r\n      .button {\r\n        display: inline-flex;\r\n        align-items: center;\r\n        gap: 6px;\r\n        padding: 8px 12px;\r\n        border-radius: 4px;\r\n        border: none;\r\n        font-weight: 500;\r\n        font-size: 13px;\r\n        cursor: pointer;\r\n        transition: background-color 0.2s;\r\n      }\r\n      .primary-btn {\r\n        background-color: #3a7bd5;\r\n        color: white;\r\n      }\r\n      .primary-btn:hover {\r\n        background-color: #2c5282;\r\n      }\r\n      .secondary-btn {\r\n        background-color: #e9ecef;\r\n        color: #495057;\r\n      }\r\n      .secondary-btn:hover {\r\n        background-color: #ced4da;\r\n      }\r\n      .contrast-summary {\r\n        background: #f8f9fa;\r\n        padding: 16px;\r\n        border-radius: 8px;\r\n        margin-bottom: 20px;\r\n        border: 1px solid #e9ecef;\r\n      }\r\n      .contrast-summary h3 {\r\n        margin-top: 0;\r\n        margin-bottom: 12px;\r\n        font-size: 16px;\r\n        color: #343a40;\r\n      }\r\n      .contrast-summary p {\r\n        margin: 8px 0;\r\n        color: #495057;\r\n      }\r\n      .progress-bar {\r\n        height: 8px;\r\n        background: #e9ecef;\r\n        border-radius: 4px;\r\n        overflow: hidden;\r\n        margin-top: 10px;\r\n      }\r\n      .progress-bar-fill {\r\n        height: 100%;\r\n        background: linear-gradient(90deg, #3a7bd5, #00c6ff);\r\n        transition: width 0.5s ease;\r\n      }\r\n      .contrast-section {\r\n        margin-bottom: 24px;\r\n      }\r\n      .section-header {\r\n        font-size: 16px;\r\n        font-weight: 600;\r\n        margin-bottom: 12px;\r\n        padding-bottom: 8px;\r\n        border-bottom: 1px solid #e9ecef;\r\n        color: #343a40;\r\n      }\r\n      .contrast-item {\r\n        padding: 12px;\r\n        border-radius: 6px;\r\n        margin-bottom: 12px;\r\n        cursor: pointer;\r\n        transition: all 0.2s;\r\n        border-left: 4px solid;\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: 4px;\r\n      }\r\n      .contrast-item:hover {\r\n        transform: translateY(-2px);\r\n        box-shadow: 0 4px 8px rgba(0,0,0,0.05);\r\n      }\r\n      .contrast-fail {\r\n        border-color: #fa5252;\r\n        background: rgba(250, 82, 82, 0.05);\r\n      }\r\n      .contrast-pass {\r\n        border-color: #40c057;\r\n        background: rgba(64, 192, 87, 0.05);\r\n      }\r\n      .color-info {\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 12px;\r\n        margin-top: 8px;\r\n      }\r\n      .color-preview {\r\n        width: 24px;\r\n        height: 24px;\r\n        border-radius: 4px;\r\n        border: 1px solid rgba(0,0,0,0.1);\r\n      }\r\n      .color-text {\r\n        font-family: monospace;\r\n        font-size: 12px;\r\n        color: #495057;\r\n      }\r\n      .label {\r\n        display: inline-block;\r\n        padding: 2px 6px;\r\n        border-radius: 4px;\r\n        font-size: 12px;\r\n        font-weight: 600;\r\n        margin-right: 6px;\r\n        color: white;\r\n      }\r\n      .label-aa { background: #40c057; }\r\n      .label-aaa { background: #339af0; }\r\n      .label-fail { background: #fa5252; }\r\n      \r\n      .item-highlight {\r\n        outline: 3px solid #ff922b !important;\r\n        outline-offset: 2px;\r\n        position: relative;\r\n        z-index: 9000;\r\n      }\r\n      \r\n      .category-header {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        padding: 12px;\r\n        background-color: #f8f9fa;\r\n        border-radius: 6px;\r\n        margin-bottom: 12px;\r\n        cursor: pointer;\r\n        border-left: 4px solid #3a7bd5;\r\n      }\r\n      .category-header h3 {\r\n        margin: 0;\r\n        font-size: 15px;\r\n      }\r\n      .category-header .icon {\r\n        transition: transform 0.3s;\r\n      }\r\n      .category-header.collapsed .icon {\r\n        transform: rotate(-90deg);\r\n      }\r\n      .category-content {\r\n        margin-left: 16px;\r\n        margin-bottom: 20px;\r\n        overflow: hidden;\r\n        transition: max-height 0.3s;\r\n      }\r\n      .category-content.collapsed {\r\n        max-height: 0;\r\n        margin-bottom: 0;\r\n      }\r\n      \r\n      .guideline-item {\r\n        margin-bottom: 12px;\r\n        padding: 12px;\r\n        border-radius: 6px;\r\n        background-color: rgba(233, 236, 239, 0.3);\r\n        border-left: 3px solid #6c757d;\r\n        cursor: pointer;\r\n        transition: all 0.2s;\r\n      }\r\n      .guideline-item:hover {\r\n        background-color: rgba(233, 236, 239, 0.6);\r\n      }\r\n      .guideline-item.fail {\r\n        border-left-color: #fa5252;\r\n        background-color: rgba(250, 82, 82, 0.05);\r\n      }\r\n      .guideline-item.pass {\r\n        border-left-color: #40c057;\r\n        background-color: rgba(64, 192, 87, 0.05);\r\n      }\r\n      .guideline-item h4 {\r\n        margin: 0 0 8px 0;\r\n        font-size: 14px;\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 8px;\r\n      }\r\n      .guideline-item p {\r\n        margin: 0;\r\n        font-size: 13px;\r\n        color: #495057;\r\n      }\r\n      \r\n      .udl-category {\r\n        margin-bottom: 24px;\r\n      }\r\n      .udl-category h3 {\r\n        font-size: 16px;\r\n        margin-top: 0;\r\n        margin-bottom: 12px;\r\n        color: #343a40;\r\n        padding-bottom: 8px;\r\n        border-bottom: 1px solid #e9ecef;\r\n      }\r\n      .udl-category p {\r\n        color: #495057;\r\n        margin-bottom: 12px;\r\n      }\r\n      .udl-suggestion {\r\n        background: #f1f8ff;\r\n        padding: 12px;\r\n        border-radius: 6px;\r\n        margin-bottom: 10px;\r\n        border-left: 3px solid #3a7bd5;\r\n      }\r\n      \r\n      .chat-messages {\r\n        flex: 1;\r\n        overflow-y: auto;\r\n        padding: 16px;\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: 16px;\r\n        background-color: #ffffff;\r\n        /* 스크롤 문제 해결을 위한 추가 속성 */\r\n        overflow-anchor: auto;\r\n        scroll-behavior: auto !important;\r\n        -webkit-overflow-scrolling: touch;\r\n        overscroll-behavior-y: contain;\r\n        scrollbar-width: thin;\r\n        position: relative;\r\n        padding-bottom: 100px !important; /* 하단 여백 추가 */\r\n        max-height: 60vh;  /* 뷰포트 높이의 60%로 제한 */\r\n        min-height: 300px; /* 최소 높이 설정 */\r\n        margin-bottom: 10px;\r\n      }\r\n\r\n      /* 메시지 겹침 방지 */\r\n      .chat-message {\r\n        max-width: 85%;\r\n        padding: 12px 16px;\r\n        border-radius: 18px;\r\n        word-break: break-word;\r\n        font-size: 13px;\r\n        line-height: 1.5;\r\n        margin-bottom: 4px;\r\n        z-index: 1;\r\n      }\r\n      .chat-user {\r\n        align-self: flex-end;\r\n        background-color: #3a7bd5;\r\n        color: white;\r\n        border-bottom-right-radius: 4px;\r\n      }\r\n      .chat-bot {\r\n        align-self: flex-start;\r\n        background-color: #f1f3f5;\r\n        color: #343a40;\r\n        border-bottom-left-radius: 4px;\r\n      }\r\n      \r\n      .chat-controls {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        padding: 8px 16px;\r\n        border-top: 1px solid #e9ecef;\r\n        background-color: #f8f9fa;\r\n      }\r\n      .control-btn {\r\n        padding: 6px 12px;\r\n        background-color: #f8f9fa;\r\n        color: #495057;\r\n        border: 1px solid #ced4da;\r\n        border-radius: 4px;\r\n        font-size: 12px;\r\n        cursor: pointer;\r\n        transition: all 0.2s;\r\n      }\r\n      .control-btn:hover {\r\n        background-color: #e9ecef;\r\n      }\r\n      \r\n      .chat-input {\r\n        display: flex;\r\n        padding: 12px 16px;\r\n        border-top: 1px solid #e9ecef;\r\n        background-color: #ffffff;\r\n        position: absolute;\r\n        bottom: 0;\r\n        left: 0;\r\n        right: 0;\r\n        z-index: 10;\r\n        box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.05);\r\n        flex-shrink: 0;\r\n      }\r\n      .chat-input input {\r\n        flex: 1;\r\n        padding: 8px 12px;\r\n        border: 1px solid #ced4da;\r\n        border-radius: 24px;\r\n        font-size: 13px;\r\n        margin-right: 8px;\r\n        transition: border-color 0.2s;\r\n      }\r\n      .chat-input input:focus {\r\n        outline: none;\r\n        border-color: #3a7bd5;\r\n        box-shadow: 0 0 0 3px rgba(58, 123, 213, 0.1);\r\n      }\r\n      .chat-input button {\r\n        padding: 8px 14px;\r\n        background-color: #3a7bd5;\r\n        color: white;\r\n        border: none;\r\n        border-radius: 24px;\r\n        cursor: pointer;\r\n        font-weight: 500;\r\n        font-size: 13px;\r\n        transition: background 0.2s;\r\n        min-width: 60px; /* 버튼의 최소 너비 설정 */\r\n        white-space: nowrap; /* 텍스트 줄바꿈 방지 */\r\n        overflow: visible; /* 내용이 넘치더라도 표시 */\r\n      }\r\n      .chat-input button:hover {\r\n        background-color: #2c5282;\r\n      }\r\n      \r\n      .code-block {\r\n        background-color: #1E1E1E;\r\n        padding: 10px;\r\n        border-radius: 4px;\r\n        margin: 8px 0;\r\n        overflow-x: auto;\r\n        font-family: 'Consolas', 'Monaco', monospace;\r\n        font-size: 11px;\r\n        line-height: 1.4;\r\n        max-height: 300px;\r\n        border: 1px solid #333;\r\n      }\r\n      .code-line {\r\n        color: #D4D4D4;\r\n        white-space: pre;\r\n      }\r\n      .code-comment {\r\n        color: #6A9955;\r\n      }\r\n      .code-keyword {\r\n        color: #569CD6;\r\n      }\r\n      .code-string {\r\n        color: #CE9178;\r\n      }\r\n      \r\n      .loading {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        padding: 20px;\r\n        color: #6c757d;\r\n      }\r\n      .loading::after {\r\n        content: '';\r\n        width: 20px;\r\n        height: 20px;\r\n        margin-left: 10px;\r\n        border: 2px solid #ced4da;\r\n        border-radius: 50%;\r\n        border-top-color: #3a7bd5;\r\n        animation: spin 0.6s linear infinite;\r\n      }\r\n      @keyframes spin {\r\n        to { transform: rotate(360deg); }\r\n      }\r\n      \r\n      .report-section {\r\n        margin-bottom: 20px;\r\n      }\r\n      .report-section h3 {\r\n        margin-top: 0;\r\n        margin-bottom: 10px;\r\n        font-size: 16px;\r\n      }\r\n      .chat-bot p {\r\n        margin: 0 0 8px 0;\r\n        font-size: 13px;\r\n      }\r\n      .chat-bot h1, .chat-bot h2, .chat-bot h3, .chat-bot h4 {\r\n        font-size: 15px;\r\n        margin: 12px 0 8px 0;\r\n      }\r\n      .chat-bot ul, .chat-bot ol {\r\n        padding-left: 20px;\r\n        margin: 8px 0;\r\n      }\r\n      .chat-bot li {\r\n        font-size: 13px;\r\n        margin-bottom: 4px;\r\n      }\r\n      \r\n      /* 채팅 UI 개선 */\r\n      #tab-content-chat {\r\n        display: flex;\r\n        flex-direction: column;\r\n        height: 100%;\r\n        overflow: hidden;\r\n        position: relative;\r\n      }\r\n      .chat-header {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        padding: 10px 16px;\r\n        border-bottom: 1px solid #e9ecef;\r\n        background-color: #f8f9fa;\r\n        z-index: 2;\r\n        flex-shrink: 0;\r\n      }\r\n      .chat-header h3 {\r\n        margin: 0;\r\n        font-size: 14px;\r\n        font-weight: 600;\r\n        color: #495057;\r\n      }\r\n      .chat-action-btn {\r\n        border: none;\r\n        background: none;\r\n        color: #6c757d;\r\n        font-size: 13px;\r\n        padding: 4px 8px;\r\n        border-radius: 4px;\r\n        cursor: pointer;\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 4px;\r\n      }\r\n      .chat-action-btn:hover {\r\n        background-color: #e9ecef;\r\n        color: #495057;\r\n      }\r\n      .chat-messages {\r\n        flex: 1;\r\n        overflow-y: auto;\r\n        padding: 16px;\r\n        padding-bottom: 100px !important; /* 입력창보다 더 여유있게 수정 */\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: 16px;\r\n        background-color: #ffffff;\r\n        height: calc(100% - 50px); /* 헤더 높이 제외 */\r\n        /* 스크롤 문제 해결을 위한 추가 속성 */\r\n        overflow-anchor: auto;\r\n        scroll-behavior: auto !important;\r\n        -webkit-overflow-scrolling: touch;\r\n        overscroll-behavior-y: contain;\r\n        max-height: 60vh;  /* 뷰포트 높이의 60%로 제한 */\r\n        min-height: 300px; /* 최소 높이 설정 */\r\n        scrollbar-width: thin;\r\n        position: relative;\r\n        overflow-x: hidden; /* 가로 스크롤 방지 */\r\n      }\r\n      .chat-input {\r\n        display: flex;\r\n        padding: 12px 16px;\r\n        border-top: 1px solid #e9ecef;\r\n        background-color: #ffffff;\r\n        position: absolute;\r\n        bottom: 0;\r\n        left: 0;\r\n        right: 0;\r\n        z-index: 10;\r\n        box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.05);\r\n        flex-shrink: 0;\r\n      }\r\n      .chat-input input {\r\n        flex: 1;\r\n        padding: 8px 12px;\r\n        border: 1px solid #ced4da;\r\n        border-radius: 24px;\r\n        font-size: 13px;\r\n        margin-right: 8px;\r\n        transition: border-color 0.2s;\r\n      }\r\n      .chat-input input:focus {\r\n        outline: none;\r\n        border-color: #3a7bd5;\r\n        box-shadow: 0 0 0 3px rgba(58, 123, 213, 0.1);\r\n      }\r\n      .chat-input button {\r\n        padding: 8px 14px;\r\n        background-color: #3a7bd5;\r\n        color: white;\r\n        border: none;\r\n        border-radius: 24px;\r\n        cursor: pointer;\r\n        font-weight: 500;\r\n        font-size: 13px;\r\n        transition: background 0.2s;\r\n        min-width: 60px; /* 버튼의 최소 너비 설정 */\r\n        white-space: nowrap; /* 텍스트 줄바꿈 방지 */\r\n        overflow: visible; /* 내용이 넘치더라도 표시 */\r\n      }\r\n      .chat-input button:hover {\r\n        background-color: #2c5282;\r\n      }\r\n      \r\n      /* 개선된 요약 통계 스타일 */\r\n      .contrast-summary-content {\r\n        padding: 14px;\r\n        background-color: #f8f9fa;\r\n        border-radius: 6px;\r\n        margin-bottom: 16px;\r\n      }\r\n      .stats-row {\r\n        display: flex;\r\n        gap: 20px;\r\n        margin-bottom: 10px;\r\n        flex-wrap: wrap;\r\n      }\r\n      \r\n      /* 탭 공지사항 스타일 수정 */\r\n      .contrast-tab-notice {\r\n        color: #6c757d;\r\n        font-size: 12px;\r\n        margin: 5px 0;\r\n        font-style: italic;\r\n        text-align: right;\r\n      }\r\n      \r\n      /* 개선된 툴팁 스타일 */\r\n      .contrast-tooltip {\r\n        position: absolute;\r\n        display: none;\r\n        width: 320px;\r\n        background-color: #fff;\r\n        border: 1px solid #dee2e6;\r\n        border-radius: 6px;\r\n        box-shadow: 0 3px 12px rgba(0,0,0,0.15);\r\n        z-index: 100;\r\n        padding: 0;\r\n        right: 0;\r\n        top: calc(100% + 5px);\r\n        text-align: left;\r\n      }\r\n      .tooltip-content {\r\n        padding: 12px;\r\n      }\r\n      .tooltip-header {\r\n        font-weight: 600;\r\n        margin-bottom: 10px;\r\n        padding-bottom: 8px;\r\n        border-bottom: 1px solid #e9ecef;\r\n        color: #343a40;\r\n      }\r\n      .tooltip-item {\r\n        margin-bottom: 8px;\r\n        line-height: 1.4;\r\n        font-size: 12px;\r\n      }\r\n      .tooltip-label {\r\n        font-weight: 600;\r\n        color: #495057;\r\n      }\r\n      \r\n      /* 수동 컬러 피커 스타일 */\r\n      .manual-color-picker-tool {\r\n        padding: 15px;\r\n        background-color: #f8f9fa;\r\n        border-radius: 6px;\r\n        border: 1px solid #dee2e6;\r\n      }\r\n      \r\n      .color-picker-info {\r\n        margin-bottom: 12px;\r\n      }\r\n      \r\n      .info-text {\r\n        font-size: 13px;\r\n        color: #495057;\r\n        line-height: 1.5;\r\n      }\r\n      \r\n      .manual-color-picker-tool h3 {\r\n        font-size: 14px;\r\n        margin-top: 0;\r\n        margin-bottom: 12px;\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 5px;\r\n      }\r\n      \r\n      .color-picker-container {\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: 15px;\r\n      }\r\n      .color-picker-row {\r\n        display: flex;\r\n        gap: 15px;\r\n        flex-wrap: wrap;\r\n      }\r\n      .color-input-group {\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 8px;\r\n      }\r\n      .color-input-group label {\r\n        font-size: 12px;\r\n        white-space: nowrap;\r\n      }\r\n      .color-input-group input[type=\"color\"] {\r\n        width: 0;\r\n        height: 0;\r\n        padding: 0;\r\n        border: none;\r\n        overflow: hidden;\r\n        position: absolute;\r\n        opacity: 0;\r\n      }\r\n      \r\n      .color-button {\r\n        width: 40px;\r\n        height: 24px;\r\n        padding: 0;\r\n        border: 1px solid #ced4da;\r\n        border-radius: 4px;\r\n        background: transparent;\r\n        cursor: pointer;\r\n        position: relative;\r\n        overflow: hidden;\r\n      }\r\n      \r\n      .color-preview-btn {\r\n        display: block;\r\n        width: 100%;\r\n        height: 100%;\r\n      }\r\n      \r\n      .color-input-group input[type=\"text\"] {\r\n        width: 80px;\r\n        height: 24px;\r\n        padding: 0 8px;\r\n        border: 1px solid #ced4da;\r\n        border-radius: 4px;\r\n        font-family: monospace;\r\n        font-size: 12px;\r\n      }\r\n      .color-preview-area {\r\n        display: flex;\r\n        gap: 15px;\r\n        align-items: center;\r\n      }\r\n      .manual-color-sample {\r\n        padding: 10px 15px;\r\n        border-radius: 4px;\r\n        min-width: 120px;\r\n        text-align: center;\r\n        font-size: 14px;\r\n        box-shadow: 0 0 0 1px rgba(0,0,0,0.1);\r\n      }\r\n      .manual-contrast-result {\r\n        font-size: 13px;\r\n      }\r\n      .contrast-result-text {\r\n        display: flex;\r\n        align-items: center;\r\n        font-size: 13px;\r\n        gap: 6px;\r\n      }\r\n      \r\n      .manual-contrast-status {\r\n        display: inline-block;\r\n        padding: 2px 6px;\r\n        border-radius: 4px;\r\n        font-size: 11px;\r\n        font-weight: 600;\r\n      }\r\n      \r\n      .manual-contrast-status.pass {\r\n        background-color: #e8f5e9;\r\n        color: #2e7d32;\r\n      }\r\n      \r\n      .manual-contrast-status.partial {\r\n        background-color: #fff3e0;\r\n        color: #e67700;\r\n      }\r\n      \r\n      .manual-contrast-status.fail {\r\n        background-color: #ffebee;\r\n        color: #d32f2f;\r\n      }\r\n      \r\n      /* 색상 코드 칩 디자인 개선 */\r\n      .color-chip {\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 4px;\r\n        padding: 2px 4px;\r\n        border-radius: 4px;\r\n        background-color: #f8f9fa;\r\n        border: 1px solid #e9ecef;\r\n      }\r\n      .color-preview {\r\n        width: 16px;\r\n        height: 16px;\r\n        border-radius: 3px;\r\n        box-shadow: 0 0 0 1px rgba(0,0,0,0.1);\r\n      }\r\n      .color-code {\r\n        font-family: monospace;\r\n        font-size: 11px;\r\n      }\r\n      \r\n      /* 대비율 값 디자인 개선 */\r\n      .ratio-value {\r\n        font-size: 13px;\r\n        display: flex;\r\n        flex-direction: column;\r\n        text-align: left;\r\n      }\r\n      .criteria-label {\r\n        font-size: 11px;\r\n        margin-bottom: 2px;\r\n        color: #6c757d;\r\n      }\r\n      \r\n      /* 컬러 샘플 박스 개선 */\r\n      .color-sample-box {\r\n        padding: 8px 12px;\r\n        border-radius: 4px;\r\n        text-align: left;\r\n        min-width: 60px;\r\n        box-shadow: 0 0 0 1px rgba(0,0,0,0.1);\r\n      }\r\n      \r\n      /* 컨트라스트 정보 레이아웃 개선 */\r\n      .contrast-info-row {\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 15px;\r\n      }\r\n      \r\n      /* 기존 스타일 끝 */\r\n    `;\r\n    document.head.appendChild(style);\r\n  \r\n    // 패널 생성\r\n    const panel = document.createElement('div');\r\n    panel.id = 'udl-accessibility-panel';\r\n    panel.style.cssText = `\r\n      position: fixed;\r\n      z-index: 9999;\r\n      top: 20px;\r\n      right: 20px;\r\n      width: 600px;\r\n      height: 900px;\r\n      background-color: white;\r\n      box-shadow: 0 0 20px rgba(0,0,0,0.15);\r\n      border-radius: 8px;\r\n      display: flex;\r\n      flex-direction: column;\r\n      overflow: hidden;\r\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n      font-size: 14px;\r\n      line-height: 1.5;\r\n      color: #333;\r\n      resize: both;\r\n    `;\r\n    panel.innerHTML = `\r\n      <div class=\"panel-header\">\r\n        <h2 class=\"panel-title\">접근성 검사</h2>\r\n        <div class=\"panel-controls\">\r\n          <button class=\"panel-btn\" id=\"minimize-panel\" title=\"최소화\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n              <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\r\n            </svg>\r\n          </button>\r\n          <button class=\"panel-btn\" id=\"close-panel\" title=\"닫기\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n              <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\r\n              <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"panel-tabs\">\r\n        <button id=\"tab-contrast\" class=\"tab-active\">명도 대비</button>\r\n        <button id=\"tab-wcag\">웹 접근성 항목</button>\r\n        <button id=\"tab-udl\">AI 제안</button>\r\n        <button id=\"tab-colorblind\">색맹 시뮬레이션</button>\r\n        <button id=\"tab-chat\">AI 챗봇</button>\r\n      </div>\r\n      <div id=\"tab-content-contrast\" class=\"tab-content\">\r\n        <div class=\"loading\">검사 중...</div>\r\n      </div>\r\n      <div id=\"tab-content-wcag\" class=\"tab-content\" style=\"display:none;\">\r\n        <div class=\"loading\">검사 중...</div>\r\n      </div>\r\n      <div id=\"tab-content-udl\" class=\"tab-content\" style=\"display:none;\">\r\n        <div class=\"loading\">분석 중...</div>\r\n      </div>\r\n      <div id=\"tab-content-colorblind\" class=\"tab-content\" style=\"display:none;\">\r\n        <div class=\"loading\">색맹 시뮬레이션 도구 로딩 중...</div>\r\n      </div>\r\n      <div id=\"tab-content-chat\" class=\"tab-content\" style=\"display:none;\">\r\n        <div class=\"chat-header\">\r\n          <h3>UDL 및 웹 접근성 문의</h3>\r\n          <button id=\"reset-chat-btn\" class=\"chat-action-btn\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n              <polyline points=\"1 4 1 10 7 10\"></polyline>\r\n              <polyline points=\"23 20 23 14 17 14\"></polyline>\r\n              <path d=\"M20.49 9A9 9 0 0 0 5.64 5.64L1 10m22 4l-4.64 4.36A9 9 0 0 1 3.51 15\"></path>\r\n            </svg>\r\n            새 대화 시작\r\n          </button>\r\n        </div>\r\n        <div class=\"chat-messages\"></div>\r\n        <div class=\"chat-input\">\r\n          <input type=\"text\" id=\"chat-input-field\" placeholder=\"웹 접근성에 대해 물어보세요\" />\r\n          <button id=\"chat-send-btn\">전송</button>\r\n        </div>\r\n      </div>\r\n      <div class=\"panel-footer\">\r\n        <div class=\"left-buttons\">\r\n          <!-- 채팅 관련 버튼은 여기에 동적으로 추가됩니다 -->\r\n          <button id=\"download-chat-btn\" class=\"button secondary-btn chat-control-btn\" style=\"display:none;\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n              <path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"></path>\r\n              <polyline points=\"7 10 12 15 17 10\"></polyline>\r\n              <line x1=\"12\" y1=\"15\" x2=\"12\" y2=\"3\"></line>\r\n            </svg>\r\n            대화 내용 다운로드\r\n          </button>\r\n          <button id=\"download-results\" class=\"button secondary-btn contrast-only-btn\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n              <path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"></path>\r\n              <polyline points=\"7 10 12 15 17 10\"></polyline>\r\n              <line x1=\"12\" y1=\"15\" x2=\"12\" y2=\"3\"></line>\r\n            </svg>\r\n            보고서 다운로드\r\n          </button>\r\n        </div>\r\n        <div class=\"right-buttons\">\r\n          <button class=\"button primary-btn\" id=\"run-full-scan\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n              <path d=\"M23 4v6h-6\"></path>\r\n              <path d=\"M1 20v-6h6\"></path>\r\n              <path d=\"M3.51 9a9 9 0 0 1 14.85-3.36L23 10M1 14l4.64 4.36A9 9 0 0 0 20.49 15\"></path>\r\n            </svg>\r\n            검사 새로고침\r\n          </button>\r\n        </div>\r\n      </div>\r\n    `;\r\n    document.body.appendChild(panel);\r\n  \r\n    // 드래그 핸들\r\n    (function(){\r\n      const header = panel.querySelector('.panel-header');\r\n      let isDragging = false;\r\n      let currentX;\r\n      let currentY;\r\n      let initialX;\r\n      let initialY;\r\n      let xOffset = 50;  // 초기 위치\r\n      let yOffset = 50;  // 초기 위치\r\n      \r\n      // 초기 위치 설정\r\n      panel.style.position = 'fixed';\r\n      panel.style.left = '50px';\r\n      panel.style.top = '50px';\r\n      \r\n      function setTranslate(xPos, yPos) {\r\n        // 화면 경계 체크\r\n        const panelWidth = panel.offsetWidth;\r\n        const panelHeight = panel.offsetHeight;\r\n        const headerHeight = header.offsetHeight;\r\n        \r\n        // x축 제한\r\n        if (xPos < 0) xPos = 0;\r\n        if (xPos > window.innerWidth - panelWidth) {\r\n          xPos = window.innerWidth - panelWidth;\r\n        }\r\n        \r\n        // y축 제한 (헤더는 항상 화면 내에 유지)\r\n        if (yPos < 0) yPos = 0;\r\n        if (yPos > window.innerHeight - headerHeight) {\r\n          yPos = window.innerHeight - headerHeight;\r\n        }\r\n        \r\n        xOffset = xPos;\r\n        yOffset = yPos;\r\n        panel.style.left = xPos + 'px';\r\n        panel.style.top = yPos + 'px';\r\n      }\r\n      \r\n      function dragStart(e) {\r\n        if (e.target.closest('.panel-btn')) return;\r\n        \r\n        initialX = e.clientX - xOffset;\r\n        initialY = e.clientY - yOffset;\r\n        \r\n        if (e.target === header || e.target.closest('.panel-header')) {\r\n          isDragging = true;\r\n        }\r\n        \r\n        e.preventDefault();\r\n      }\r\n      \r\n      function dragEnd() {\r\n        initialX = currentX;\r\n        initialY = currentY;\r\n        isDragging = false;\r\n      }\r\n      \r\n      function drag(e) {\r\n        if (isDragging) {\r\n          e.preventDefault();\r\n          \r\n          currentX = e.clientX - initialX;\r\n          currentY = e.clientY - initialY;\r\n          \r\n          setTranslate(currentX, currentY);\r\n        }\r\n      }\r\n      \r\n      // 이벤트 리스너\r\n      header.addEventListener('mousedown', dragStart);\r\n      document.addEventListener('mousemove', drag);\r\n      document.addEventListener('mouseup', dragEnd);\r\n      \r\n      // 창 크기 변경 시 패널 위치 조정\r\n      window.addEventListener('resize', () => {\r\n        setTranslate(xOffset, yOffset);\r\n      });\r\n    })();\r\n  \r\n    // 최소화 / 닫기 기능\r\n    let minimized = false;\r\n    document.getElementById('minimize-panel').onclick = () => {\r\n      minimized = !minimized;\r\n      const contents = panel.querySelectorAll('.tab-content, .panel-tabs, .panel-footer');\r\n      contents.forEach(el => el.style.display = minimized ? 'none' : '');\r\n      if (minimized) {\r\n        panel.style.height = 'auto';\r\n        panel.style.resize = 'none';\r\n      } else {\r\n        panel.style.height = 'calc(90vh)';\r\n        panel.style.resize = 'both';\r\n      }\r\n      document.getElementById('minimize-panel').innerHTML = minimized ? \r\n        '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><polyline points=\"7 13 12 18 17 13\"></polyline><polyline points=\"7 6 12 11 17 6\"></polyline></svg>' : \r\n        '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line></svg>';\r\n      document.getElementById('minimize-panel').title = minimized ? '확장' : '최소화';\r\n    };\r\n    \r\n    document.getElementById('close-panel').onclick = () => {\r\n      panel.remove();\r\n      removeHighlights();\r\n    };\r\n  \r\n    // 탭 전환\r\n    function activateTab(tabId) {\r\n      // 모든 탭 컨텐츠 숨기기\r\n      document.querySelectorAll('.tab-content').forEach(content => {\r\n        content.style.display = 'none';\r\n      });\r\n      \r\n      // 모든 탭 비활성화\r\n      document.querySelectorAll('.panel-tabs button').forEach(tab => {\r\n        tab.classList.remove('tab-active');\r\n      });\r\n      \r\n      // 선택한 탭 활성화\r\n      document.getElementById('tab-' + tabId).classList.add('tab-active');\r\n      document.getElementById('tab-content-' + tabId).style.display = 'block';\r\n      \r\n      // 탭 내용 로드\r\n      if (tabId === 'contrast' && !document.getElementById('tab-content-contrast').innerHTML.includes('contrast-summary')) {\r\n        checkColorContrast();\r\n      }\r\n      if (tabId === 'wcag' && !document.getElementById('tab-content-wcag').innerHTML.includes('category-header')) {\r\n        analyzeWCAG();\r\n      }\r\n      if (tabId === 'udl' && !document.getElementById('tab-content-udl').innerHTML.includes('udl-category')) {\r\n        analyzeForUDL();\r\n      }\r\n      if (tabId === 'colorblind' && !document.getElementById('tab-content-colorblind').innerHTML.includes('colorblind-tester')) {\r\n        checkColorBlindness();\r\n      }\r\n      if (tabId === 'chat') {\r\n        initChat();\r\n      }\r\n      \r\n      // 모든 특수 버튼 숨기기\r\n      document.querySelectorAll('.contrast-only-btn, .chat-control-btn').forEach(btn => {\r\n        btn.style.display = 'none';\r\n      });\r\n      \r\n      // 현재 탭에 따라 필요한 버튼만 표시\r\n      if (tabId === 'contrast') {\r\n        document.querySelectorAll('.contrast-only-btn').forEach(btn => {\r\n          btn.style.display = 'inline-flex';\r\n        });\r\n      } else if (tabId === 'chat') {\r\n        document.querySelectorAll('.chat-control-btn').forEach(btn => {\r\n          btn.style.display = 'inline-flex';\r\n        });\r\n      }\r\n    }\r\n    \r\n    // 탭 클릭 이벤트 등록\r\n    document.getElementById('tab-contrast').onclick = () => activateTab('contrast');\r\n    document.getElementById('tab-wcag').onclick = () => activateTab('wcag');\r\n    document.getElementById('tab-udl').onclick = () => activateTab('udl');\r\n    document.getElementById('tab-colorblind').onclick = () => activateTab('colorblind');\r\n    document.getElementById('tab-chat').onclick = () => activateTab('chat');\r\n  \r\n    // 다운로드/전체검사\r\n    document.getElementById('download-results').onclick = () => downloadReport();\r\n    document.getElementById('run-full-scan').onclick = () => runFullScan();\r\n  \r\n    // 초기 대비 검사\r\n    checkColorContrast();\r\n  \r\n    //── 기능 함수들 ─────────────────────────────────────────\r\n  \r\n    function checkColorContrast() {\r\n      const contrastContent = document.getElementById('tab-content-contrast');\r\n      contrastContent.innerHTML = '<div class=\"loading\">색상 대비 검사 중...</div>';\r\n      \r\n      setTimeout(() => {\r\n        // 텍스트 요소 찾기\r\n        const els = Array.from(document.querySelectorAll('p, h1, h2, h3, h4, h5, h6, a, span, li, td, th, div, label, button'))\r\n          .filter(el => {\r\n            if (el.closest('#udl-accessibility-panel')) return false;\r\n            const txt = el.textContent.trim(); \r\n            if (!txt) return false;\r\n            \r\n            const s = window.getComputedStyle(el);\r\n            return s.display !== 'none' && s.visibility !== 'hidden' && s.opacity !== '0' && el.offsetParent !== null;\r\n          });\r\n  \r\n        // 결과 계산\r\n        const results = els.map(el => {\r\n          const s = window.getComputedStyle(el);\r\n          let bg = s.backgroundColor;\r\n          let bgElement = el;\r\n          \r\n          // 배경색 찾기 개선 - 하나의 요소만 확인하는 것이 아니라 모든 부모 요소 확인\r\n          if (bg === 'transparent' || bg === 'rgba(0, 0, 0, 0)') {\r\n            let p = el.parentElement;\r\n            while (p) {\r\n              const computedStyle = window.getComputedStyle(p);\r\n              const pb = computedStyle.backgroundColor;\r\n              if (pb !== 'transparent' && pb !== 'rgba(0, 0, 0, 0)') {\r\n                bg = pb;\r\n                bgElement = p;\r\n                break;\r\n              }\r\n              p = p.parentElement;\r\n            }\r\n          }\r\n          \r\n          // 기본 배경색 설정 - document의 배경색을 확인\r\n          if (bg === 'transparent' || bg === 'rgba(0, 0, 0, 0)') {\r\n            const docStyle = window.getComputedStyle(document.body);\r\n            bg = docStyle.backgroundColor;\r\n            if (bg === 'transparent' || bg === 'rgba(0, 0, 0, 0)') {\r\n              bg = 'rgb(255, 255, 255)'; // 기본값\r\n            }\r\n            bgElement = document.body;\r\n          }\r\n          \r\n          const tc = parseColor(s.color);\r\n          const bc = parseColor(bg);\r\n          const cr = calculateContrast(tc, bc);\r\n          \r\n          const fs = parseFloat(s.fontSize);\r\n          const fw = s.fontWeight;\r\n          const large = fs >= 18 || (fs >= 14 && (parseInt(fw) >= 700 || fw === 'bold'));\r\n          \r\n          // HTML 코드 추출 - 텍스트와 배경 요소 모두 포함\r\n          const elementHTML = el.outerHTML.split('>')[0] + '>';\r\n          const bgElementHTML = bgElement !== el ? bgElement.outerHTML.split('>')[0] + '>' : '';\r\n          \r\n          return {\r\n            el, \r\n            bgElement,\r\n            text: el.textContent.trim().slice(0, 30) + (el.textContent.length > 30 ? '...' : ''),\r\n            contrast: cr, \r\n            aa: large ? cr >= 3 : cr >= 4.5, \r\n            aaa: large ? cr >= 4.5 : cr >= 7,\r\n            fs, \r\n            fw,\r\n            textColor: s.color,\r\n            textColorHex: rgbToHex(tc.r, tc.g, tc.b),\r\n            bgColor: bg,\r\n            bgColorHex: rgbToHex(bc.r, bc.g, bc.b),\r\n            elementHTML,\r\n            bgElementHTML\r\n          };\r\n        });\r\n  \r\n        displayContrastResults(results);\r\n      }, 500);\r\n    }\r\n  \r\n    function rgbToHex(r, g, b) {\r\n      return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1).toUpperCase();\r\n    }\r\n  \r\n    function parseColor(c) {\r\n      // RGB 형식 처리\r\n      const rgbMatch = c.match(/rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*[\\d.]+)?\\)/);\r\n      if (rgbMatch) {\r\n        return { r: +rgbMatch[1], g: +rgbMatch[2], b: +rgbMatch[3] };\r\n      }\r\n      \r\n      // 16진수 색상 코드 처리 (#rrggbb 또는 #rgb)\r\n      if (c.startsWith('#')) {\r\n        let hex = c.substring(1);\r\n        \r\n        // #rgb 형식을 #rrggbb 형식으로 변환\r\n        if (hex.length === 3) {\r\n          hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\r\n        }\r\n        \r\n        // 16진수 색상 코드를 RGB로 변환\r\n        const r = parseInt(hex.substring(0, 2), 16);\r\n        const g = parseInt(hex.substring(2, 4), 16);\r\n        const b = parseInt(hex.substring(4, 6), 16);\r\n        \r\n        return { r, g, b };\r\n      }\r\n      \r\n      // 기본값 (검은색) 반환\r\n      return { r: 0, g: 0, b: 0 };\r\n    }\r\n    \r\n    function calculateLuminance({r, g, b}) {\r\n      [r, g, b] = [r, g, b].map(v => {\r\n        v /= 255;\r\n        return v <= 0.03928 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\r\n      });\r\n      return 0.2126 * r + 0.7152 * g + 0.0722 * b;\r\n    }\r\n    \r\n    function calculateContrast(a, b) {\r\n      const L1 = calculateLuminance(a);\r\n      const L2 = calculateLuminance(b);\r\n      return Math.round(((Math.max(L1, L2) + 0.05) / (Math.min(L1, L2) + 0.05)) * 100) / 100;\r\n    }\r\n  \r\n    function displayContrastResults(results) {\r\n      const c = document.getElementById('tab-content-contrast');\r\n      c.innerHTML = '';\r\n      \r\n      const fails = results.filter(r => !r.aa);\r\n      const passes = results.filter(r => r.aa);\r\n      const total = results.length;\r\n      const pct = total ? Math.round(passes.length / total * 100) : 0;\r\n  \r\n      // 색상 대비 평가 기준 설명 추가\r\n      const contrastGuide = document.createElement('div');\r\n      contrastGuide.className = 'contrast-guide';\r\n      contrastGuide.innerHTML = `\r\n        <div class=\"contrast-guide-header\">\r\n          <h3>색상 대비 평가 기준 <span class=\"info-icon\" id=\"contrast-info-icon\">ⓘ</span></h3>\r\n          <div class=\"contrast-tooltip\" id=\"contrast-tooltip\">\r\n            <div class=\"tooltip-content\">\r\n              <div class=\"tooltip-header\">텍스트 콘텐츠의 명도 대비 기준</div>\r\n              <div class=\"tooltip-item\"><span class=\"tooltip-label\">일반 텍스트:</span> 명도 대비 <strong>4.5:1</strong> 이상</div>\r\n              <div class=\"tooltip-item\"><span class=\"tooltip-label\">큰 텍스트(18pt 이상 또는 14pt 이상 굵은 글꼴):</span> 명도 대비 <strong>3:1</strong> 이상</div>\r\n              <div class=\"tooltip-item\"><span class=\"tooltip-label\">화면 확대 가능 콘텐츠:</span> 명도 대비 <strong>3:1</strong> 이상</div>\r\n              <div class=\"tooltip-item\"><span class=\"tooltip-label\">예외:</span> 로고, 장식 목적의 콘텐츠, 마우스/키보드 포커스 시 명도 대비가 커지는 콘텐츠 등</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      `;\r\n      c.appendChild(contrastGuide);\r\n      \r\n      // 툴팁 동작 설정\r\n      setTimeout(() => {\r\n        const infoIcon = document.getElementById('contrast-info-icon');\r\n        const tooltip = document.getElementById('contrast-tooltip');\r\n        if (infoIcon && tooltip) {\r\n          infoIcon.addEventListener('mouseenter', () => {\r\n            tooltip.style.display = 'block';\r\n          });\r\n          infoIcon.addEventListener('mouseleave', () => {\r\n            tooltip.style.display = 'none';\r\n          });\r\n          infoIcon.addEventListener('focus', () => {\r\n            tooltip.style.display = 'block';\r\n          });\r\n          infoIcon.addEventListener('blur', () => {\r\n            tooltip.style.display = 'none';\r\n          });\r\n          // 접근성을 위한 키보드 이벤트 추가\r\n          infoIcon.tabIndex = 0;\r\n          infoIcon.setAttribute('role', 'button');\r\n          infoIcon.setAttribute('aria-label', '색상 대비 평가 기준 정보');\r\n        }\r\n      }, 100);\r\n\r\n      // 요약 정보 (간소화)\r\n      const sum = document.createElement('div');\r\n      sum.className = 'contrast-summary';\r\n      sum.innerHTML = `\r\n        <div class=\"contrast-summary-content\">\r\n          <div class=\"summary-stats\">\r\n            <div class=\"stats-row\">\r\n              <span>검사된 요소: <strong>${total}개</strong></span>\r\n              <span class=\"pass-stat\"><span class=\"dot pass-dot\"></span> 통과: <strong>${passes.length}개</strong> (${pct}%)</span>\r\n              <span class=\"fail-stat\"><span class=\"dot fail-dot\"></span> 실패: <strong>${fails.length}개</strong> (${100 - pct}%)</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"progress-container\">\r\n            <div class=\"progress-bar\">\r\n              <div class=\"progress-bar-fill\" style=\"width:${pct}%\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      `;\r\n      c.appendChild(sum);\r\n  \r\n      // 탭 컨테이너 생성\r\n      const tabContainer = document.createElement('div');\r\n      tabContainer.className = 'contrast-tabs';\r\n      tabContainer.innerHTML = `\r\n        <div class=\"contrast-tab-header\">\r\n          <div class=\"contrast-tab-header-content\">\r\n            <div class=\"tab-buttons\">\r\n              <button id=\"tab-fail\" class=\"contrast-tab-btn active\" data-tab=\"fail\">\r\n                <span class=\"tab-icon fail-icon\">⚠</span> 부적합 항목 (${fails.length})\r\n              </button>\r\n              <button id=\"tab-pass\" class=\"contrast-tab-btn\" data-tab=\"pass\">\r\n                <span class=\"tab-icon pass-icon\">✓</span> 적합 항목 (${passes.length})\r\n              </button>\r\n              <button id=\"tab-manual\" class=\"contrast-tab-btn\" data-tab=\"manual\">\r\n                <span class=\"tab-icon manual-icon\">⚙</span> 수동 검사\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div id=\"contrast-tab-content\" class=\"contrast-tab-content\">\r\n          <div id=\"contrast-tab-fail\" class=\"contrast-tab-pane active\"></div>\r\n          <div id=\"contrast-tab-pass\" class=\"contrast-tab-pane\"></div>\r\n          <div id=\"contrast-tab-manual\" class=\"contrast-tab-pane\"></div>\r\n        </div>\r\n      `;\r\n      c.appendChild(tabContainer);\r\n\r\n      // 탭 이벤트 설정 후에 수동 컬러 피커 도구 추가\r\n      setTimeout(() => {\r\n        // 기존 탭 설정 코드\r\n        const tabButtons = document.querySelectorAll('.contrast-tab-btn');\r\n        tabButtons.forEach(button => {\r\n          button.addEventListener('click', () => {\r\n            // 모든 탭 비활성화\r\n            tabButtons.forEach(btn => btn.classList.remove('active'));\r\n            document.querySelectorAll('.contrast-tab-pane').forEach(pane => pane.classList.remove('active'));\r\n            \r\n            // 클릭된 탭 활성화\r\n            button.classList.add('active');\r\n            const tabId = button.getAttribute('data-tab');\r\n            document.getElementById(`contrast-tab-${tabId}`).classList.add('active');\r\n          });\r\n        });\r\n        \r\n        // 수동 컬러 피커 도구 추가\r\n        const manualPickerTool = document.createElement('div');\r\n        manualPickerTool.className = 'manual-color-picker-tool';\r\n        manualPickerTool.innerHTML = `\r\n          <div class=\"color-picker-info\">\r\n            <span class=\"info-text\">웹 페이지에서 추출하기 어려운 색상이나 그라디언트, 이미지 등의 배경 위 텍스트 색상 대비를 수동으로 확인할 수 있습니다.</span>\r\n          </div>\r\n          <div class=\"color-picker-container\">\r\n            <div class=\"color-picker-row\">\r\n              <div class=\"color-input-group\">\r\n                <label for=\"text-color-picker\">텍스트 색상:</label>\r\n                <button id=\"text-color-button\" class=\"color-button\">\r\n                  <span class=\"color-preview-btn\" style=\"background-color:#000000\"></span>\r\n                  <input type=\"color\" id=\"text-color-picker\" value=\"#000000\">\r\n                </button>\r\n                <input type=\"text\" id=\"text-color-hex\" value=\"#000000\" placeholder=\"#000000\">\r\n              </div>\r\n              <div class=\"color-input-group\">\r\n                <label for=\"bg-color-picker\">배경 색상:</label>\r\n                <button id=\"bg-color-button\" class=\"color-button\">\r\n                  <span class=\"color-preview-btn\" style=\"background-color:#FFFFFF\"></span>\r\n                  <input type=\"color\" id=\"bg-color-picker\" value=\"#FFFFFF\">\r\n                </button>\r\n                <input type=\"text\" id=\"bg-color-hex\" value=\"#FFFFFF\" placeholder=\"#FFFFFF\">\r\n              </div>\r\n            </div>\r\n            <div class=\"color-preview-area\">\r\n              <div id=\"manual-color-sample\" class=\"manual-color-sample\" style=\"color: #000000; background-color: #FFFFFF;\">\r\n                샘플 텍스트\r\n              </div>\r\n              <div class=\"manual-contrast-result\">\r\n                <div class=\"contrast-result-text\">대비율: <strong id=\"manual-contrast-ratio\">21.00:1</strong> - <span id=\"manual-contrast-status\" class=\"manual-contrast-status pass\">WCAG AA/AAA 통과</span></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        `;\r\n        \r\n        const manualPane = document.getElementById('contrast-tab-manual');\r\n        manualPane.appendChild(manualPickerTool);\r\n        \r\n        // 수동 색상 피커 이벤트 설정\r\n        const textColorPicker = document.getElementById('text-color-picker');\r\n        const textColorHex = document.getElementById('text-color-hex');\r\n        const bgColorPicker = document.getElementById('bg-color-picker');\r\n        const bgColorHex = document.getElementById('bg-color-hex');\r\n        const colorSample = document.getElementById('manual-color-sample');\r\n        const contrastRatio = document.getElementById('manual-contrast-ratio');\r\n        const contrastStatus = document.getElementById('manual-contrast-status');\r\n        const textColorBtn = document.getElementById('text-color-button');\r\n        const bgColorBtn = document.getElementById('bg-color-button');\r\n        \r\n        // 색상 버튼 클릭 시 피커 활성화\r\n        textColorBtn.addEventListener('click', () => {\r\n          textColorPicker.click();\r\n        });\r\n        \r\n        bgColorBtn.addEventListener('click', () => {\r\n          bgColorPicker.click();\r\n        });\r\n        \r\n        // 색상 입력값 변경 시 대비율 계산 함수\r\n        function updateManualContrast() {\r\n          try {\r\n            const textColor = parseColor(textColorPicker.value);\r\n            const bgColor = parseColor(bgColorPicker.value);\r\n            const ratio = calculateContrast(textColor, bgColor);\r\n            \r\n            colorSample.style.color = textColorPicker.value;\r\n            colorSample.style.backgroundColor = bgColorPicker.value;\r\n            document.querySelector('#text-color-button .color-preview-btn').style.backgroundColor = textColorPicker.value;\r\n            document.querySelector('#bg-color-button .color-preview-btn').style.backgroundColor = bgColorPicker.value;\r\n            \r\n            contrastRatio.textContent = `${ratio.toFixed(2)}:1`;\r\n            \r\n            // 평가 기준 적용\r\n            if (ratio >= 7) {\r\n              contrastStatus.className = 'manual-contrast-status pass';\r\n              contrastStatus.textContent = 'WCAG AA/AAA 통과';\r\n            } else if (ratio >= 4.5) {\r\n              contrastStatus.className = 'manual-contrast-status pass';\r\n              contrastStatus.textContent = 'WCAG AA 통과 (AAA 실패)';\r\n            } else if (ratio >= 3) {\r\n              contrastStatus.className = 'manual-contrast-status partial';\r\n              contrastStatus.textContent = '큰 텍스트만 WCAG AA 통과';\r\n            } else {\r\n              contrastStatus.className = 'manual-contrast-status fail';\r\n              contrastStatus.textContent = 'WCAG 기준 실패';\r\n            }\r\n          } catch (e) {\r\n            console.error('대비율 계산 오류:', e);\r\n          }\r\n        }\r\n        \r\n        // 색상 입력 필드 이벤트 연결\r\n        textColorPicker.addEventListener('input', () => {\r\n          textColorHex.value = textColorPicker.value.toUpperCase();\r\n          updateManualContrast();\r\n        });\r\n        \r\n        textColorHex.addEventListener('input', () => {\r\n          if (/^#[0-9A-F]{6}$/i.test(textColorHex.value)) {\r\n            textColorPicker.value = textColorHex.value;\r\n            updateManualContrast();\r\n          }\r\n        });\r\n        \r\n        bgColorPicker.addEventListener('input', () => {\r\n          bgColorHex.value = bgColorPicker.value.toUpperCase();\r\n          updateManualContrast();\r\n        });\r\n        \r\n        bgColorHex.addEventListener('input', () => {\r\n          if (/^#[0-9A-F]{6}$/i.test(bgColorHex.value)) {\r\n            bgColorPicker.value = bgColorHex.value;\r\n            updateManualContrast();\r\n          }\r\n        });\r\n        \r\n        // 초기 대비율 계산\r\n        updateManualContrast();\r\n      }, 100);\r\n\r\n      // 실패 항목 내용 생성\r\n      const failPane = document.getElementById('contrast-tab-fail');\r\n      if (fails.length) {\r\n        const failItems = document.createElement('div');\r\n        failItems.className = 'contrast-items';\r\n        \r\n        fails.forEach(r => {\r\n          const item = document.createElement('div');\r\n          item.className = 'contrast-item contrast-fail';\r\n          \r\n          // 기준에 대한 설명 툴팁 추가\r\n          const criteriaText = r.fs >= 18 || (r.fs >= 14 && parseInt(r.fw) >= 700) ? \r\n            '큰 텍스트 (3:1)' : '일반 텍스트 (4.5:1)';\r\n          \r\n          item.innerHTML = `\r\n            <div class=\"item-header\">\r\n              <span class=\"label label-fail\">실패</span>\r\n              <span class=\"item-text\">\"${r.text}\"</span>\r\n            </div>\r\n            <div class=\"item-details\">\r\n              <div class=\"contrast-info-row\">\r\n                <div class=\"color-sample-box\" style=\"color: ${r.textColorHex}; background-color: ${r.bgColorHex}\">Abc</div>\r\n                <div class=\"contrast-ratio\">\r\n                  <div class=\"ratio-value low-ratio\">${criteriaText} - 대비율: <strong>${r.contrast.toFixed(2)}:1</strong></div>\r\n                  <div class=\"color-info\">\r\n                    <span class=\"color-chip\">\r\n                      <span class=\"color-preview\" style=\"background-color:${r.textColorHex}\"></span>\r\n                      <span class=\"color-code\">${r.textColorHex}</span>\r\n                    </span>\r\n                    <span class=\"color-chip\">\r\n                      <span class=\"color-preview\" style=\"background-color:${r.bgColorHex}\"></span>\r\n                      <span class=\"color-code\">${r.bgColorHex}</span>\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"element-code-preview\">\r\n                <button class=\"code-toggle\">코드 보기</button>\r\n                <div class=\"code-content\">\r\n                  <code class=\"element-html\">텍스트 요소: ${escapeHTML(r.elementHTML)}</code>\r\n                  ${r.bgElementHTML ? `<code class=\"bg-element-html\">배경 요소: ${escapeHTML(r.bgElementHTML)}</code>` : ''}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          `;\r\n          \r\n          item.onclick = (e) => {\r\n            // 코드 토글 버튼 클릭 시 이벤트 처리\r\n            if (e.target.classList.contains('code-toggle') || e.target.closest('.code-toggle')) {\r\n              const toggleBtn = e.target.classList.contains('code-toggle') ? e.target : e.target.closest('.code-toggle');\r\n              const codeContent = toggleBtn.nextElementSibling;\r\n              codeContent.classList.toggle('show');\r\n              toggleBtn.classList.toggle('active');\r\n              toggleBtn.textContent = codeContent.classList.contains('show') ? '코드 접기' : '코드 보기';\r\n              e.stopPropagation();\r\n              return;\r\n            }\r\n            \r\n            // 코드 영역 클릭 시 이벤트 전파 중지\r\n            if (e.target.closest('.code-content')) {\r\n              e.stopPropagation();\r\n              return;\r\n            }\r\n            \r\n            removeHighlights();\r\n            r.el.classList.add('item-highlight');\r\n            r.el.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n          };\r\n          \r\n          failItems.appendChild(item);\r\n        });\r\n        \r\n        failPane.appendChild(failItems);\r\n      } else {\r\n        failPane.innerHTML = '<div class=\"empty-message\">부적합 항목이 없습니다.</div>';\r\n      }\r\n  \r\n      // 통과 항목 내용 생성\r\n      const passPane = document.getElementById('contrast-tab-pass');\r\n      if (passes.length) {\r\n        const passItems = document.createElement('div');\r\n        passItems.className = 'contrast-items';\r\n        \r\n        passes.forEach(r => {\r\n          const item = document.createElement('div');\r\n          item.className = 'contrast-item contrast-pass';\r\n          \r\n          const labels = [];\r\n          if (r.aa) labels.push(`<span class=\"label label-aa\" title=\"WCAG 2.0 AA 기준 통과\">AA</span>`);\r\n          if (r.aaa) labels.push(`<span class=\"label label-aaa\" title=\"WCAG 2.0 AAA 기준 통과\">AAA</span>`);\r\n          \r\n          // 기준에 대한 설명 툴팁 추가\r\n          const criteriaText = r.fs >= 18 || (r.fs >= 14 && parseInt(r.fw) >= 700) ? \r\n            '큰 텍스트 (3:1)' : '일반 텍스트 (4.5:1)';\r\n          \r\n          item.innerHTML = `\r\n            <div class=\"item-header\">\r\n              ${labels.join(' ')}\r\n              <span class=\"item-text\">\"${r.text}\"</span>\r\n            </div>\r\n            <div class=\"item-details\">\r\n              <div class=\"contrast-info-row\">\r\n                <div class=\"color-sample-box\" style=\"color: ${r.textColorHex}; background-color: ${r.bgColorHex}\">Abc</div>\r\n                <div class=\"contrast-ratio\">\r\n                  <div class=\"ratio-value high-ratio\">${criteriaText} - 대비율: <strong>${r.contrast.toFixed(2)}:1</strong></div>\r\n                  <div class=\"color-info\">\r\n                    <span class=\"color-chip\">\r\n                      <span class=\"color-preview\" style=\"background-color:${r.textColorHex}\"></span>\r\n                      <span class=\"color-code\">${r.textColorHex}</span>\r\n                    </span>\r\n                    <span class=\"color-chip\">\r\n                      <span class=\"color-preview\" style=\"background-color:${r.bgColorHex}\"></span>\r\n                      <span class=\"color-code\">${r.bgColorHex}</span>\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"element-code-preview\">\r\n                <button class=\"code-toggle\">코드 보기</button>\r\n                <div class=\"code-content\">\r\n                  <code class=\"element-html\">텍스트 요소: ${escapeHTML(r.elementHTML)}</code>\r\n                  ${r.bgElementHTML ? `<code class=\"bg-element-html\">배경 요소: ${escapeHTML(r.bgElementHTML)}</code>` : ''}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          `;\r\n          \r\n          item.onclick = (e) => {\r\n            // 코드 토글 버튼 클릭 시 이벤트 처리\r\n            if (e.target.classList.contains('code-toggle') || e.target.closest('.code-toggle')) {\r\n              const toggleBtn = e.target.classList.contains('code-toggle') ? e.target : e.target.closest('.code-toggle');\r\n              const codeContent = toggleBtn.nextElementSibling;\r\n              codeContent.classList.toggle('show');\r\n              toggleBtn.classList.toggle('active');\r\n              toggleBtn.textContent = codeContent.classList.contains('show') ? '코드 접기' : '코드 보기';\r\n              e.stopPropagation();\r\n              return;\r\n            }\r\n            \r\n            // 코드 영역 클릭 시 이벤트 전파 중지\r\n            if (e.target.closest('.code-content')) {\r\n              e.stopPropagation();\r\n              return;\r\n            }\r\n            \r\n            removeHighlights();\r\n            r.el.classList.add('item-highlight');\r\n            r.el.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n          };\r\n          \r\n          passItems.appendChild(item);\r\n        });\r\n        \r\n        passPane.appendChild(passItems);\r\n      } else {\r\n        passPane.innerHTML = '<div class=\"empty-message\">적합 항목이 없습니다.</div>';\r\n      }\r\n\r\n      // HTML 문자열 이스케이프 함수\r\n      function escapeHTML(str) {\r\n        return str\r\n          .replace(/&/g, '&amp;')\r\n          .replace(/</g, '&lt;')\r\n          .replace(/>/g, '&gt;')\r\n          .replace(/\"/g, '&quot;')\r\n          .replace(/'/g, '&#039;');\r\n      }\r\n\r\n      // CSS 스타일 추가\r\n      const styleEl = document.createElement('style');\r\n      styleEl.textContent = `\r\n        .contrast-guide {\r\n          background-color: #f8f9fa;\r\n          border-radius: 8px;\r\n          padding: 10px;\r\n          margin: 0 12px 12px 12px;\r\n          border-left: 3px solid #4285f4;\r\n        }\r\n        \r\n        .contrast-guide-header {\r\n          display: flex;\r\n          align-items: center;\r\n          position: relative;\r\n        }\r\n        \r\n        .contrast-guide-header h3 {\r\n          margin: 0;\r\n          font-size: 14px;\r\n          display: flex;\r\n          align-items: center;\r\n        }\r\n        \r\n        .info-icon {\r\n          display: inline-flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          width: 18px;\r\n          height: 18px;\r\n          border-radius: 50%;\r\n          background: #4285f4;\r\n          color: white;\r\n          font-size: 11px;\r\n          margin-left: 6px;\r\n          cursor: pointer;\r\n        }\r\n        \r\n        .contrast-tooltip {\r\n          display: none;\r\n          position: absolute;\r\n          top: 100%;\r\n          left: 0;\r\n          background: white;\r\n          border: 1px solid #ddd;\r\n          box-shadow: 0 2px 10px rgba(0,0,0,0.1);\r\n          border-radius: 6px;\r\n          padding: 10px;\r\n          z-index: 1000;\r\n          width: 300px;\r\n          margin-top: 8px;\r\n        }\r\n        \r\n        .tooltip-content h4 {\r\n          margin-top: 0;\r\n          margin-bottom: 8px;\r\n          font-size: 14px;\r\n        }\r\n        \r\n        .tooltip-content p {\r\n          margin: 6px 0;\r\n          font-size: 13px;\r\n          line-height: 1.4;\r\n        }\r\n        \r\n        /* 요약 정보 간소화 */\r\n        .contrast-summary {\r\n          background-color: white;\r\n          border-radius: 8px;\r\n          padding: 10px;\r\n          margin: 0 12px 12px 12px;\r\n          box-shadow: 0 1px 3px rgba(0,0,0,0.1);\r\n        }\r\n        \r\n        .contrast-summary-content {\r\n          display: flex;\r\n          flex-direction: column;\r\n          gap: 8px;\r\n        }\r\n        \r\n        .summary-stats {\r\n          font-size: 13px;\r\n        }\r\n        \r\n        .summary-stats p {\r\n          margin: 0;\r\n        }\r\n        \r\n        .progress-container {\r\n          width: 100%;\r\n        }\r\n        \r\n        .dot {\r\n          display: inline-block;\r\n          width: 8px;\r\n          height: 8px;\r\n          border-radius: 50%;\r\n          margin-right: 4px;\r\n        }\r\n        \r\n        .pass-dot {\r\n          background-color: #34a853;\r\n        }\r\n        \r\n        .fail-dot {\r\n          background-color: #ea4335;\r\n        }\r\n        \r\n        .pass-stat {\r\n          color: #34a853;\r\n        }\r\n        \r\n        .fail-stat {\r\n          color: #ea4335;\r\n        }\r\n        \r\n        .progress-bar {\r\n          height: 6px;\r\n          background-color: #f2f2f2;\r\n          border-radius: 4px;\r\n          overflow: hidden;\r\n        }\r\n        \r\n        .progress-bar-fill {\r\n          height: 100%;\r\n          background-color: #34a853;\r\n          border-radius: 4px;\r\n          transition: width 0.5s ease;\r\n        }\r\n        \r\n        /* 탭 스타일 개선 */\r\n        .contrast-tabs {\r\n          margin: 0 12px;\r\n        }\r\n        \r\n        .contrast-tab-header {\r\n          margin-bottom: 10px;\r\n        }\r\n        \r\n        .contrast-tab-header-content {\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: center;\r\n          width: 100%;\r\n        }\r\n        \r\n        .tab-buttons {\r\n          display: flex;\r\n          gap: 4px;\r\n        }\r\n        \r\n        .contrast-tab-btn {\r\n          padding: 8px 12px;\r\n          background: none;\r\n          border: none;\r\n          border-bottom: 2px solid transparent;\r\n          cursor: pointer;\r\n          font-size: 13px;\r\n          font-weight: 500;\r\n          display: flex;\r\n          align-items: center;\r\n          color: #666;\r\n          transition: all 0.2s;\r\n        }\r\n        \r\n        .contrast-tab-btn:hover {\r\n          background-color: #f5f5f5;\r\n        }\r\n        \r\n        .contrast-tab-btn.active {\r\n          border-bottom-color: #4285f4;\r\n          color: #4285f4;\r\n        }\r\n        \r\n        .tab-icon {\r\n          margin-right: 6px;\r\n        }\r\n        \r\n        .fail-icon {\r\n          color: #ea4335;\r\n        }\r\n        \r\n        .pass-icon {\r\n          color: #34a853;\r\n        }\r\n        \r\n        .manual-icon {\r\n          color: #4285f4;\r\n        }\r\n        \r\n        .contrast-tab-pane {\r\n          display: none;\r\n        }\r\n        \r\n        .contrast-tab-pane.active {\r\n          display: block;\r\n        }\r\n        \r\n        /* 카드 아이템 스타일 */\r\n        .contrast-items {\r\n          display: grid;\r\n          grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\r\n          gap: 12px;\r\n          padding-bottom: 16px;\r\n        }\r\n        \r\n        .contrast-item {\r\n          background: white;\r\n          border-radius: 8px;\r\n          box-shadow: 0 1px 3px rgba(0,0,0,0.08);\r\n          overflow: hidden;\r\n          border: 1px solid #eee;\r\n          transition: all 0.2s;\r\n        }\r\n        \r\n        .contrast-item:hover {\r\n          box-shadow: 0 2px 5px rgba(0,0,0,0.1);\r\n        }\r\n        \r\n        .item-header {\r\n          padding: 10px;\r\n          background-color: #f8f9fa;\r\n          border-bottom: 1px solid #eee;\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 8px;\r\n          font-size: 13px;\r\n        }\r\n        \r\n        .item-text {\r\n          font-weight: 500;\r\n          overflow: hidden;\r\n          text-overflow: ellipsis;\r\n          white-space: nowrap;\r\n        }\r\n        \r\n        .item-details {\r\n          padding: 10px;\r\n        }\r\n        \r\n        .contrast-info-row {\r\n          display: flex;\r\n          align-items: flex-start;\r\n          gap: 10px;\r\n          margin-bottom: 10px;\r\n        }\r\n        \r\n        .color-sample-box {\r\n          width: 55px;\r\n          height: 38px;\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          font-weight: 600;\r\n          border-radius: 6px;\r\n          border: 1px solid #eee;\r\n          box-shadow: 0 1px 2px rgba(0,0,0,0.05);\r\n          flex-shrink: 0;\r\n          text-align: center;\r\n        }\r\n        \r\n        .contrast-ratio {\r\n          flex: 1;\r\n          text-align: left;\r\n        }\r\n        \r\n        .ratio-value {\r\n          font-size: 13px;\r\n          margin-bottom: 5px;\r\n          text-align: left;\r\n        }\r\n        \r\n        .low-ratio {\r\n          color: #ea4335;\r\n        }\r\n        \r\n        .high-ratio {\r\n          color: #34a853;\r\n        }\r\n        \r\n        .color-info {\r\n          display: flex;\r\n          flex-wrap: wrap;\r\n          gap: 6px;\r\n          text-align: left;\r\n        }\r\n        \r\n        .color-chip {\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 5px;\r\n          padding: 3px 6px;\r\n          background-color: #f8f9fa;\r\n          border: 1px solid #eee;\r\n          border-radius: 4px;\r\n          font-size: 11px;\r\n          text-align: left;\r\n        }\r\n        \r\n        .color-preview {\r\n          width: 14px;\r\n          height: 14px;\r\n          border-radius: 3px;\r\n          border: 1px solid rgba(0,0,0,0.1);\r\n        }\r\n        \r\n        .color-code {\r\n          font-family: monospace;\r\n          color: #444;\r\n          text-align: left;\r\n        }\r\n        \r\n        .element-code-preview {\r\n          margin-top: 8px;\r\n          border-top: 1px solid #eee;\r\n          padding-top: 8px;\r\n          text-align: left;\r\n        }\r\n        \r\n        .code-toggle {\r\n          font-size: 12px;\r\n          color: #4285f4;\r\n          cursor: pointer;\r\n          padding: 3px 6px;\r\n          background: none;\r\n          border: 1px solid #e0e0e0;\r\n          border-radius: 4px;\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 3px;\r\n          margin: 0;\r\n          text-align: left;\r\n        }\r\n        \r\n        .code-toggle:hover {\r\n          color: #2b71d9;\r\n          background-color: #f5f5f5;\r\n        }\r\n        \r\n        .code-toggle::before {\r\n          content: '▶';\r\n          font-size: 9px;\r\n          transition: transform 0.2s ease;\r\n        }\r\n        \r\n        .code-toggle.active::before {\r\n          transform: rotate(90deg);\r\n        }\r\n        \r\n        .code-content {\r\n          display: none;\r\n          background-color: #f8f9fa;\r\n          border-radius: 4px;\r\n          margin-top: 6px;\r\n          overflow: hidden;\r\n        }\r\n        \r\n        .code-content.show {\r\n          display: block;\r\n        }\r\n        \r\n        .element-html, .bg-element-html {\r\n          display: block;\r\n          font-family: monospace;\r\n          font-size: 11px;\r\n          padding: 8px;\r\n          overflow-x: auto;\r\n          white-space: pre-wrap;\r\n          color: #444;\r\n          line-height: 1.4;\r\n          text-align: left;\r\n        }\r\n        \r\n        .bg-element-html {\r\n          border-top: 1px dashed #ddd;\r\n          background-color: #f1f3f5;\r\n        }\r\n        \r\n        .label {\r\n          display: inline-flex;\r\n          align-items: center;\r\n          padding: 2px 5px;\r\n          border-radius: 3px;\r\n          font-size: 10px;\r\n          font-weight: 600;\r\n          line-height: 1;\r\n        }\r\n        \r\n        .label-fail {\r\n          background-color: #ffebee;\r\n          color: #d32f2f;\r\n        }\r\n        \r\n        .label-aa {\r\n          background-color: #e8f5e9;\r\n          color: #2e7d32;\r\n        }\r\n        \r\n        .label-aaa {\r\n          background-color: #e3f2fd;\r\n          color: #1565c0;\r\n        }\r\n        \r\n        .empty-message {\r\n          text-align: center;\r\n          padding: 20px;\r\n          color: #888;\r\n          font-style: italic;\r\n          background-color: #f8f9fa;\r\n          border-radius: 8px;\r\n          margin-bottom: 16px;\r\n        }\r\n        \r\n        /* 수동 검사 도구 */\r\n        .manual-color-picker-tool {\r\n          padding: 16px;\r\n          background-color: white;\r\n          border-radius: 8px;\r\n          box-shadow: 0 1px 3px rgba(0,0,0,0.08);\r\n          margin-bottom: 16px;\r\n        }\r\n        \r\n        .color-picker-info {\r\n          margin-bottom: 16px;\r\n        }\r\n        \r\n        .info-text {\r\n          font-size: 13px;\r\n          color: #666;\r\n        }\r\n        \r\n        .color-picker-container {\r\n          display: flex;\r\n          flex-direction: column;\r\n          gap: 16px;\r\n        }\r\n        \r\n        .color-picker-row {\r\n          display: flex;\r\n          flex-wrap: wrap;\r\n          gap: 16px;\r\n        }\r\n        \r\n        .color-input-group {\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 8px;\r\n        }\r\n        \r\n        .color-input-group label {\r\n          font-size: 13px;\r\n          font-weight: 500;\r\n        }\r\n        \r\n        .color-button {\r\n          position: relative;\r\n          width: 36px;\r\n          height: 36px;\r\n          border-radius: 4px;\r\n          border: 1px solid #ddd;\r\n          overflow: hidden;\r\n          padding: 0;\r\n          cursor: pointer;\r\n          background: none;\r\n        }\r\n        \r\n        .color-preview-btn {\r\n          display: block;\r\n          width: 100%;\r\n          height: 100%;\r\n        }\r\n        \r\n        input[type=\"color\"] {\r\n          position: absolute;\r\n          opacity: 0;\r\n          width: 0;\r\n          height: 0;\r\n        }\r\n        \r\n        input[type=\"text\"] {\r\n          padding: 8px 10px;\r\n          border: 1px solid #ddd;\r\n          border-radius: 4px;\r\n          font-family: monospace;\r\n          font-size: 13px;\r\n          width: 80px;\r\n        }\r\n        \r\n        .color-preview-area {\r\n          display: flex;\r\n          flex-direction: column;\r\n          gap: 12px;\r\n        }\r\n        \r\n        .manual-color-sample {\r\n          padding: 16px;\r\n          text-align: center;\r\n          font-size: 16px;\r\n          border-radius: 8px;\r\n          box-shadow: 0 1px 3px rgba(0,0,0,0.08);\r\n          border: 1px solid #eee;\r\n        }\r\n        \r\n        .manual-contrast-result {\r\n          background-color: #f8f9fa;\r\n          padding: 12px;\r\n          border-radius: 8px;\r\n          text-align: center;\r\n        }\r\n        \r\n        .contrast-result-text {\r\n          font-size: 14px;\r\n        }\r\n        \r\n        .manual-contrast-status {\r\n          display: inline-block;\r\n          padding: 4px 8px;\r\n          border-radius: 4px;\r\n          font-weight: 600;\r\n          margin-left: 4px;\r\n          font-size: 12px;\r\n        }\r\n        \r\n        .manual-contrast-status.pass {\r\n          background-color: #e8f5e9;\r\n          color: #2e7d32;\r\n        }\r\n        \r\n        .manual-contrast-status.partial {\r\n          background-color: #fff8e1;\r\n          color: #ff8f00;\r\n        }\r\n        \r\n        .manual-contrast-status.fail {\r\n          background-color: #ffebee;\r\n          color: #d32f2f;\r\n        }\r\n        \r\n        /* 강조 효과 */\r\n        .item-highlight {\r\n          outline: 3px solid #4285f4 !important;\r\n          outline-offset: 2px !important;\r\n        }\r\n      `;\r\n      c.appendChild(styleEl);\r\n    }\r\n  \r\n    function analyzeWCAG() {\r\n      const wcagContent = document.getElementById('tab-content-wcag');\r\n      wcagContent.innerHTML = '<div class=\"loading\">접근성 분석 중...</div>';\r\n      \r\n      // axe-core를 사용한 WCAG 분석 수행\r\n      loadAxeCore()\r\n        .then(axe => {\r\n          return axe.run(document, {\r\n            resultTypes: ['violations', 'passes', 'incomplete', 'inapplicable'],\r\n            selectors: true\r\n          });\r\n        })\r\n        .then(results => {\r\n          wcagContent.innerHTML = '';\r\n          \r\n          // 각 WCAG 카테고리별로 검사 결과 표시\r\n          for (const [key, category] of Object.entries(KWCAG22)) {\r\n            const categorySection = document.createElement('div');\r\n            categorySection.className = 'category-section';\r\n            categorySection.innerHTML = `<h3>${category.name}</h3>`;\r\n            \r\n            category.items.forEach(item => {\r\n              // axe 결과에서 관련 규칙 찾기\r\n              let result = analyzeWCAGItem(item);\r\n              \r\n              // axe-core의 결과와 통합\r\n              const axeRules = mapWCAGToAxeRules(item.id);\r\n              if (axeRules.length > 0) {\r\n                const axeResults = getAxeResultsForRules(results, axeRules);\r\n                if (axeResults.status !== 'inapplicable') {\r\n                  result = axeResults;\r\n                }\r\n              }\r\n              \r\n              const itemDiv = document.createElement('div');\r\n              itemDiv.className = `guideline-item ${result.status}`;\r\n              itemDiv.setAttribute('data-guideline', item.id);\r\n              itemDiv.setAttribute('data-category', key);\r\n              \r\n              let statusText = '';\r\n              if (result.status === 'pass') {\r\n                statusText = '✓ 양호: ';\r\n              } else if (result.status === 'fail') {\r\n                statusText = '✗ 문제점: ';\r\n              } else if (result.status === 'review') {\r\n                statusText = '? 검토 필요: ';\r\n              }\r\n              \r\n              itemDiv.innerHTML = `\r\n                <h4>${item.id} ${item.name}</h4>\r\n                <p>${item.desc}</p>\r\n                <p>${statusText}${result.message}</p>\r\n              `;\r\n              \r\n              // 위반 요소가 있는 경우 강조 추가\r\n              if (result.elements && result.elements.length > 0) {\r\n                const showElementBtn = document.createElement('button');\r\n                showElementBtn.className = 'show-element-btn';\r\n                showElementBtn.textContent = '위반 요소 보기';\r\n                showElementBtn.addEventListener('click', () => {\r\n                  removeHighlights();\r\n                  result.elements.forEach(el => {\r\n                    try {\r\n                      el.classList.add('item-highlight');\r\n                      el.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n                    } catch (e) {\r\n                      console.error('요소 강조 표시 오류:', e);\r\n                    }\r\n                  });\r\n                });\r\n                itemDiv.appendChild(showElementBtn);\r\n              }\r\n              \r\n              categorySection.appendChild(itemDiv);\r\n            });\r\n            \r\n            wcagContent.appendChild(categorySection);\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error('WCAG 분석 오류:', error);\r\n          wcagContent.innerHTML = '<div class=\"error\">접근성 분석 중 오류가 발생했습니다.</div>';\r\n        });\r\n    }\r\n\r\n    // WCAG 규칙과 axe-core 규칙 매핑\r\n    function mapWCAGToAxeRules(wcagId) {\r\n      // WCAG 기준과 axe-core 규칙 간의 매핑 정의\r\n      const wcagToAxeMap = {\r\n        '1.1.1': ['image-alt', 'input-image-alt', 'area-alt', 'svg-img-alt'],\r\n        '1.2.1': ['audio-caption', 'video-caption'],\r\n        '1.3.1': ['table-fake-caption', 'td-has-header', 'th-has-data-cells'],\r\n        '1.3.2': ['logical-tab-order', 'heading-order'],\r\n        '1.3.3': ['label', 'input-button-name', 'form-field-multiple-labels'],\r\n        '1.4.1': ['link-in-text-block', 'color-contrast'],\r\n        '1.4.3': ['color-contrast'],\r\n        '2.1.1': ['accesskeys', 'focusable-no-name', 'area-alt'],\r\n        '2.4.1': ['bypass', 'region'],\r\n        '2.4.2': ['document-title', 'frame-title'],\r\n        '2.4.3': ['link-name', 'button-name'],\r\n        '3.1.1': ['html-lang-valid', 'html-has-lang'],\r\n        '3.3.1': ['aria-input-field-name', 'label'],\r\n        '3.3.2': ['label', 'input-button-name'],\r\n        '4.1.1': ['duplicate-id-active', 'duplicate-id'],\r\n        '4.1.2': ['aria-roles', 'aria-valid-attr', 'aria-required-attr']\r\n      };\r\n      \r\n      return wcagToAxeMap[wcagId] || [];\r\n    }\r\n\r\n    // axe-core 결과에서 특정 규칙에 대한 결과 추출\r\n    function getAxeResultsForRules(axeResults, ruleIds) {\r\n      const violations = axeResults.violations.filter(v => ruleIds.includes(v.id));\r\n      const incomplete = axeResults.incomplete.filter(v => ruleIds.includes(v.id));\r\n      const passes = axeResults.passes.filter(v => ruleIds.includes(v.id));\r\n      \r\n      if (violations.length > 0) {\r\n        // 가장 심각한 위반 항목 선택\r\n        const mostSevere = violations.sort((a, b) => {\r\n          const impactOrder = { critical: 4, serious: 3, moderate: 2, minor: 1 };\r\n          return impactOrder[b.impact] - impactOrder[a.impact];\r\n        })[0];\r\n        \r\n        return {\r\n          status: 'fail',\r\n          message: `${mostSevere.help} (${mostSevere.nodes.length}개 요소)`,\r\n          elements: mostSevere.nodes.slice(0, 3).map(node => {\r\n            try {\r\n              const selector = node.target[0];\r\n              return document.querySelector(selector);\r\n            } catch (e) {\r\n              return null;\r\n            }\r\n          }).filter(Boolean)\r\n        };\r\n      } \r\n      \r\n      if (incomplete.length > 0) {\r\n        return {\r\n          status: 'review',\r\n          message: `수동 검토 필요: ${incomplete[0].help}`,\r\n          elements: []\r\n        };\r\n      }\r\n      \r\n      if (passes.length > 0) {\r\n        return {\r\n          status: 'pass',\r\n          message: `검사 통과 (${passes.reduce((total, rule) => total + rule.nodes.length, 0)}개 요소)`,\r\n          elements: []\r\n        };\r\n      }\r\n      \r\n      return {\r\n        status: 'inapplicable',\r\n        message: '해당 없음',\r\n        elements: []\r\n      };\r\n    }\r\n  \r\n    function analyzeForUDL() {\r\n      const udlContent = document.getElementById('tab-content-udl');\r\n      udlContent.innerHTML = '<div class=\"loading\">AI 분석 중...</div>';\r\n      \r\n      // 페이지의 HTML 구조를 기반으로 분석\r\n      const pageHtml = document.documentElement.outerHTML;\r\n      const pageTitle = document.title || 'Untitled Page';\r\n      const bodyText = document.body.innerText;\r\n      \r\n      // AI를 통한 분석 및 제안\r\n      analyzeUDLWithAI(pageHtml, pageTitle, bodyText);\r\n    }\r\n  \r\n    function analyzeUDLWithAI(html, title, bodyText) {\r\n      const udlContent = document.getElementById('tab-content-udl');\r\n      \r\n      // 페이지 콘텐츠 요약 생성\r\n      const pageContentSummary = `\r\n        페이지 제목: ${title}\r\n        페이지 콘텐츠 요약: ${bodyText.slice(0, 1000)}...\r\n      `.trim();\r\n      \r\n      // API 요청 데이터 준비\r\n      const requestData = {\r\n        contents: [{\r\n          parts: [{\r\n            text: `웹 페이지를 UDL(보편적 학습 설계) 원칙과 웹 접근성에 따라 분석해주세요. \r\n             \r\n다음은 분석할 웹 페이지의 정보입니다:\r\n${pageContentSummary}\r\n\r\n이 페이지의 접근성을 개선하기 위한 방안을 구체적으로 5-7가지 제안해주세요.\r\n특히 다음에 초점을 맞춰주세요:\r\n1. 시각적 접근성 (색상 대비, 텍스트 크기, 레이아웃)\r\n2. 키보드 접근성\r\n3. 화면 읽기 프로그램 대응\r\n4. 명확한 네비게이션 구조\r\n5. 다양한 사용자를 위한 멀티미디어 대안\r\n\r\n현재 페이지에서 개선이 필요한 부분을 지적하고, 어떻게 개선할 수 있는지 실용적인 방법을 제시해주세요.\r\n마크다운 형식으로 응답해주세요.`\r\n          }]\r\n        }]\r\n      };\r\n      \r\n      // Gemini API 호출\r\n      fetch(`https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-lite:generateContent?key=${API_KEY}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(requestData)\r\n      })\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        loadingDiv = udlContent.querySelector('.loading');\r\n        if (loadingDiv) {\r\n          loadingDiv.remove();\r\n        }\r\n        \r\n        // 결과 표시 영역 생성\r\n        const resultDiv = document.createElement('div');\r\n        resultDiv.className = 'ai-analysis-result';\r\n        \r\n        // AI 응답 결과 처리\r\n        try {\r\n          const aiText = data.candidates[0].content.parts[0].text;\r\n          resultDiv.innerHTML = `\r\n            <div class=\"ai-response\">\r\n              ${formatAIResponse(aiText)}\r\n            </div>\r\n          `;\r\n        } catch (e) {\r\n          resultDiv.innerHTML = `\r\n            <div class=\"error\">\r\n              <p>AI 응답 처리 중 오류가 발생했습니다: ${e.message}</p>\r\n            </div>\r\n          `;\r\n        }\r\n        \r\n        udlContent.appendChild(resultDiv);\r\n      })\r\n      .catch(error => {\r\n        loadingDiv = udlContent.querySelector('.loading');\r\n        if (loadingDiv) {\r\n          loadingDiv.remove();\r\n        }\r\n        \r\n        const errorDiv = document.createElement('div');\r\n        errorDiv.className = 'error';\r\n        errorDiv.innerHTML = `\r\n          <p>죄송합니다. AI 분석 중 오류가 발생했습니다.</p>\r\n          <p>오류 내용: ${error.message}</p>\r\n          <p>API 엔드포인트: https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-lite:generateContent</p>\r\n        `;\r\n        udlContent.appendChild(errorDiv);\r\n      });\r\n    }\r\n  \r\n    function formatAIResponse(text) {\r\n      // 마크다운 변환 개선\r\n      let formattedText = text\r\n        // 헤더 처리\r\n        .replace(/^### (.*$)/gim, '<h3>$1</h3>')\r\n        .replace(/^## (.*$)/gim, '<h2>$1</h2>')\r\n        .replace(/^# (.*$)/gim, '<h1>$1</h1>')\r\n        \r\n        // 코드 블록 처리\r\n        .replace(/```([\\s\\S]*?)```/g, '<pre class=\"code-block\">$1</pre>')\r\n        \r\n        // 인라인 코드 처리\r\n        .replace(/`([^`]+)`/g, '<code class=\"inline-code\">$1</code>')\r\n        \r\n        // 굵게 처리\r\n        .replace(/\\*\\*([^*]+)\\*\\*/g, '<strong>$1</strong>')\r\n        \r\n        // 기울임꼴 처리\r\n        .replace(/\\*([^*]+)\\*/g, '<em>$1</em>')\r\n        \r\n        // 구분선 처리\r\n        .replace(/^---$/gm, '<hr>')\r\n        \r\n        // 링크 처리\r\n        .replace(/\\[([^\\]]+)\\]\\(([^)]+)\\)/g, '<a href=\"$2\" target=\"_blank\" rel=\"noopener noreferrer\">$1</a>');\r\n      \r\n      // 목록 항목 처리 - HTML로 변환\r\n      const listItemRegex = /^(\\s*)[-*+] (.*)$/gm;\r\n      const listItemMatches = [...formattedText.matchAll(listItemRegex)];\r\n      \r\n      if (listItemMatches.length > 0) {\r\n        // 목록 항목 변환\r\n        formattedText = formattedText.replace(listItemRegex, '<li>$2</li>');\r\n        \r\n        // 목록 항목을 ul 태그로 감싸기\r\n        formattedText = '<ul>' + formattedText + '</ul>';\r\n        \r\n        // 중첩된 목록 태그 제거\r\n        formattedText = formattedText.replace(/<\\/ul>\\s*<ul>/g, '');\r\n      }\r\n      \r\n      // 문단 처리 - 빈 줄을 기준으로 문단 분리\r\n      formattedText = formattedText.replace(/\\n\\n/g, '</p><p>');\r\n      \r\n      // 최종 결과를 div로 감싸기\r\n      const styledResponse = `\r\n        <div class=\"ai-analysis-content\">\r\n          <p>${formattedText}</p>\r\n          <style>\r\n            .ai-analysis-content {\r\n              font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n              line-height: 1.6;\r\n              color: #333;\r\n              padding: 16px;\r\n              background-color: #fff;\r\n              border-radius: 8px;\r\n              box-shadow: 0 1px 3px rgba(0,0,0,0.1);\r\n            }\r\n            \r\n            .ai-analysis-content h1, \r\n            .ai-analysis-content h2, \r\n            .ai-analysis-content h3 {\r\n              margin-top: 24px;\r\n              margin-bottom: 16px;\r\n              color: #1a73e8;\r\n              font-weight: 600;\r\n              line-height: 1.3;\r\n            }\r\n            \r\n            .ai-analysis-content h1 {\r\n              font-size: 24px;\r\n              border-bottom: 1px solid #eee;\r\n              padding-bottom: 8px;\r\n            }\r\n            \r\n            .ai-analysis-content h2 {\r\n              font-size: 20px;\r\n            }\r\n            \r\n            .ai-analysis-content h3 {\r\n              font-size: 16px;\r\n            }\r\n            \r\n            .ai-analysis-content p {\r\n              margin-bottom: 16px;\r\n            }\r\n            \r\n            .ai-analysis-content ul, \r\n            .ai-analysis-content ol {\r\n              margin-bottom: 16px;\r\n              padding-left: 24px;\r\n            }\r\n            \r\n            .ai-analysis-content li {\r\n              margin-bottom: 8px;\r\n              list-style-type: disc;\r\n            }\r\n            \r\n            .ai-analysis-content code.inline-code {\r\n              background-color: #f5f7fa;\r\n              padding: 2px 4px;\r\n              border-radius: 4px;\r\n              font-family: Consolas, Monaco, 'Andale Mono', monospace;\r\n              font-size: 90%;\r\n              color: #e53935;\r\n            }\r\n            \r\n            .ai-analysis-content pre.code-block {\r\n              background-color: #f5f7fa;\r\n              padding: 16px;\r\n              border-radius: 4px;\r\n              overflow-x: auto;\r\n              font-family: Consolas, Monaco, 'Andale Mono', monospace;\r\n              font-size: 90%;\r\n              color: #333;\r\n              border: 1px solid #eee;\r\n              margin-bottom: 16px;\r\n              white-space: pre-wrap;\r\n            }\r\n            \r\n            .ai-analysis-content hr {\r\n              border: 0;\r\n              height: 1px;\r\n              background-color: #eee;\r\n              margin: 24px 0;\r\n            }\r\n            \r\n            .ai-analysis-content strong {\r\n              font-weight: 600;\r\n            }\r\n            \r\n            .ai-analysis-content a {\r\n              color: #1a73e8;\r\n              text-decoration: none;\r\n            }\r\n            \r\n            .ai-analysis-content a:hover {\r\n              text-decoration: underline;\r\n            }\r\n            \r\n            .ai-analysis-content em {\r\n              font-style: italic;\r\n              color: #555;\r\n            }\r\n          </style>\r\n        </div>\r\n      `;\r\n      \r\n      return styledResponse;\r\n    }\r\n  \r\n    function initChat() {\r\n      if (!document.querySelector('.chat-messages')) return;\r\n      \r\n      const chatInput = document.getElementById('chat-input-field');\r\n      const chatSendBtn = document.getElementById('chat-send-btn');\r\n      const chatMessages = document.querySelector('.chat-messages');\r\n      const resetChatBtn = document.getElementById('reset-chat-btn');\r\n      \r\n      console.log('채팅 초기화:', {chatInput, chatSendBtn, chatMessages, resetChatBtn});\r\n      \r\n      // 채팅 창 스크롤 최적화 - 채팅 탭 클릭 시에도 적용\r\n      document.querySelectorAll('.tab-link').forEach(tab => {\r\n        tab.addEventListener('click', () => {\r\n          if (tab.getAttribute('data-tab') === 'tab-content-chat') {\r\n            // 채팅 탭이 활성화되면 스크롤 처리\r\n            setTimeout(() => scrollToBottom(chatMessages), 100);\r\n          }\r\n        });\r\n      });\r\n      \r\n      // 이미 초기화된 경우 건너뛰기\r\n      if (chatInput && chatSendBtn && chatMessages.children.length === 0) {\r\n        // 대화 기록 초기화\r\n        window.chatHistory = [];\r\n        \r\n        // 초기 인사 메시지 추가 (다시 활성화)\r\n        addBotMessage(\"안녕하세요! UDL 및 웹 접근성 관련 질문이 있으시면 편하게 물어보세요.\");\r\n        \r\n        // 대화 내용 다운로드 버튼 이벤트 리스너\r\n        const downloadChatBtn = document.getElementById('download-chat-btn');\r\n        if (downloadChatBtn) {\r\n          downloadChatBtn.addEventListener('click', downloadChat);\r\n        }\r\n        \r\n        // 대화 초기화 버튼 이벤트 리스너\r\n        if (resetChatBtn) {\r\n          resetChatBtn.addEventListener('click', resetChat);\r\n        }\r\n        \r\n        // 이벤트 리스너 추가\r\n        chatSendBtn.addEventListener('click', function() {\r\n          console.log('전송 버튼 클릭됨');\r\n          sendChatMessage();\r\n        });\r\n        \r\n        chatInput.addEventListener('keydown', function(e) {\r\n          if (e.key === 'Enter') {\r\n            console.log('엔터키 입력됨');\r\n            sendChatMessage();\r\n          }\r\n        });\r\n        \r\n        // 스크롤 이벤트 리스너 추가 - 여러 방법으로 스크롤 이벤트 확인\r\n        chatMessages.addEventListener('DOMNodeInserted', () => {\r\n          // 콘텐츠가 추가될 때마다 스크롤 처리\r\n          setTimeout(() => scrollToBottom(chatMessages), 10);\r\n        });\r\n        \r\n        // 채팅 창 내부 요소 변경 감지 (MutationObserver)\r\n        const observer = new MutationObserver(() => {\r\n          setTimeout(() => scrollToBottom(chatMessages), 10);\r\n        });\r\n        \r\n        // 채팅창 DOM 변경 감지 설정\r\n        observer.observe(chatMessages, { \r\n          childList: true, \r\n          subtree: true, \r\n          attributes: true,\r\n          characterData: true \r\n        });\r\n        \r\n        // 초기 스크롤 위치 조정\r\n        setTimeout(() => scrollToBottom(chatMessages), 100);\r\n        setTimeout(() => scrollToBottom(chatMessages), 500);\r\n        setTimeout(() => scrollToBottom(chatMessages), 1000);\r\n        \r\n        // 레이아웃 재계산을 위한 스타일 적용\r\n        const applyScrollFix = () => {\r\n          chatMessages.style.display = 'none';\r\n          // 강제로 레이아웃 재계산을 트리거\r\n          void chatMessages.offsetHeight;\r\n          chatMessages.style.display = 'flex';\r\n          scrollToBottom(chatMessages);\r\n        };\r\n        \r\n        // 윈도우 크기 변경 시 스크롤 조정\r\n        window.addEventListener('resize', applyScrollFix);\r\n        \r\n        // 채팅창 클릭 시 스크롤 조정 (사용자 상호작용 후)\r\n        chatMessages.addEventListener('click', () => scrollToBottom(chatMessages));\r\n        \r\n        console.log('채팅 이벤트 설정 완료');\r\n      } else if (chatMessages.children.length > 0) {\r\n        // 이미 메시지가 있는 경우 스크롤\r\n        scrollToBottom(chatMessages);\r\n      }\r\n    }\r\n    \r\n    function resetChat() {\r\n      if (!confirm('현재 대화 내용을 지우고 새 대화를 시작하시겠습니까?')) return;\r\n      \r\n      // 대화 기록 초기화\r\n      window.chatHistory = [];\r\n      \r\n      // 채팅 메시지 영역 비우기\r\n      const chatMessages = document.querySelector('.chat-messages');\r\n      chatMessages.innerHTML = '';\r\n      \r\n      // 초기 메시지 추가 (다시 활성화)\r\n      addBotMessage(\"안녕하세요! UDL 및 웹 접근성 관련 질문이 있으시면 편하게 물어보세요.\");\r\n    }\r\n    \r\n    function downloadChat() {\r\n      if (!window.chatHistory || window.chatHistory.length === 0) {\r\n        alert('다운로드할 대화 내용이 없습니다.');\r\n        return;\r\n      }\r\n      \r\n      // 대화 내용을 텍스트로 변환\r\n      const chatText = window.chatHistory.map(item => {\r\n        return `${item.role === 'user' ? '사용자' : 'AI'}: ${item.content}`;\r\n      }).join('\\n\\n');\r\n      \r\n      // 현재 날짜와 시간으로 파일명 생성\r\n      const date = new Date();\r\n      const fileName = `UDL-Chat-${date.getFullYear()}-${date.getMonth()+1}-${date.getDate()}-${date.getHours()}-${date.getMinutes()}.txt`;\r\n      \r\n      // 다운로드 링크 생성 및 클릭\r\n      const element = document.createElement('a');\r\n      element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(chatText));\r\n      element.setAttribute('download', fileName);\r\n      element.style.display = 'none';\r\n      document.body.appendChild(element);\r\n      element.click();\r\n      document.body.removeChild(element);\r\n    }\r\n  \r\n    // PDF 데이터 캐시 변수\r\n    let cachedPDFData = null;\r\n\r\n    function loadKnowledgePDF() {\r\n      // 이미 캐시된 데이터가 있으면 바로 반환\r\n      if (cachedPDFData) {\r\n        return Promise.resolve(cachedPDFData);\r\n      }\r\n      \r\n      // 최초 1회만 PDF 로드 - CORS 우회를 위해 fetch 대신 XMLHttpRequest 사용\r\n      return new Promise((resolve, reject) => {\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open('GET', 'https://raw.githubusercontent.com/suhmieum/UDL/main/%ED%95%9C%EA%B5%AD%ED%98%95%20%EC%9B%B9%20%EC%BD%98%ED%85%90%EC%B8%A0%20%EC%A0%91%EA%B7%BC%EC%84%B1%20%EC%A7%80%EC%B9%A8%202.2-2.pdf', true);\r\n        xhr.responseType = 'arraybuffer';\r\n        \r\n        xhr.onload = function() {\r\n          if (xhr.status === 200) {\r\n            const buffer = xhr.response;\r\n            cachedPDFData = btoa(String.fromCharCode(...new Uint8Array(buffer)));\r\n            resolve(cachedPDFData);\r\n          } else {\r\n            reject(new Error('PDF 파일을 불러올 수 없습니다.'));\r\n          }\r\n        };\r\n        \r\n        xhr.onerror = function() {\r\n          reject(new Error('PDF 파일을 불러오는 중 오류가 발생했습니다.'));\r\n        };\r\n        \r\n        xhr.send();\r\n      }).catch(error => {\r\n        console.error('PDF 로드 오류:', error);\r\n        return null;\r\n      });\r\n    }\r\n\r\n    function sendChatMessage() {\r\n      console.log('sendChatMessage 함수 실행됨');\r\n      \r\n      const chatInput = document.getElementById('chat-input-field');\r\n      const chatMessages = document.querySelector('.chat-messages');\r\n      const userMessage = chatInput.value.trim();\r\n      \r\n      console.log('사용자 입력:', userMessage);\r\n      \r\n      if (!userMessage) {\r\n        console.log('입력이 비어있음, 함수 종료');\r\n        return;\r\n      }\r\n      \r\n      // 웹 접근성과 무관한 질문인지 확인\r\n      const accessibilityKeywords = [\r\n        '접근성', '웹접근성', 'KWCAG', '대체텍스트', '키보드', '스크린리더', '명도', '대비', \r\n        '색상', '자막', '표', '구조', '레이아웃', '마크업', 'ARIA', '지침', '인식', '이해', \r\n        '운용', '콘텐츠', '대체', '텍스트', '이미지', '링크', '버튼', '서식', '오류', 'alt', \r\n        'label', 'WAI', 'WCAG', '장애', '시각', '청각', '인지', '마우스', '포커스', '네비게이션'\r\n      ];\r\n      \r\n      const isAccessibilityRelated = accessibilityKeywords.some(keyword => \r\n        userMessage.toLowerCase().includes(keyword.toLowerCase())\r\n      );\r\n      \r\n      if (!isAccessibilityRelated && userMessage.length > 10) {\r\n        // 접근성 관련 키워드가 없고 10자 이상인 경우\r\n        addUserMessage(userMessage);\r\n        chatInput.value = '';\r\n        \r\n        // 관련 없는 질문 응답\r\n        addBotMessage(\"CP님, 죄송합니다만 이 도구는 웹 접근성 관련 질문에 특화되어 있습니다. KWCAG 2.2(한국형 웹 콘텐츠 접근성 지침)에 관한 질문이나 현재 페이지의 접근성 개선 방안에 대해 문의해 주시기 바랍니다.\");\r\n        return;\r\n      }\r\n      \r\n      // 사용자 메시지 추가\r\n      addUserMessage(userMessage);\r\n      chatInput.value = '';\r\n      \r\n      // 대화 기록에 추가\r\n      if (!window.chatHistory) window.chatHistory = [];\r\n      window.chatHistory.push({ role: 'user', content: userMessage });\r\n      \r\n      // 최대 5개 메시지만 기억\r\n      if (window.chatHistory.length > 10) {\r\n        window.chatHistory = window.chatHistory.slice(window.chatHistory.length - 10);\r\n      }\r\n      \r\n      // 로딩 표시\r\n      const loadingDiv = document.createElement('div');\r\n      loadingDiv.className = 'loading';\r\n      chatMessages.appendChild(loadingDiv);\r\n      \r\n      // 스크롤 처리 개선 - 통합 함수 사용\r\n      scrollToBottom(chatMessages);\r\n\r\n      console.log('API 요청 준비 중');\r\n      \r\n      // 극도로 간단한 프롬프트 작성\r\n      const promptText = `\r\n웹 접근성 전문가로서 아래 질문에 답변해주세요:\r\n\r\n페이지 정보: ${document.title} (${window.location.href})\r\n\r\n사용자 질문: ${userMessage}\r\n\r\n웹 접근성 관련 질문에 대해 한국형 웹 콘텐츠 접근성 지침(KWCAG) 2.2를 기준으로 답변해주세요.\r\n답변 시 다음 형식을 사용하세요:\r\n\r\n---\r\n**[관련 KWCAG 항목]**\r\n* **오류:**\r\n* **문제점:**\r\n* **해결방법:**\r\n* **코드 예시:** (필요 시)\r\n---\r\n\r\n사용자는 \"CP님\"으로 호칭하고, 간결하게 답변해주세요.\r\n      `.trim();\r\n\r\n      const requestData = {\r\n        contents: [{ parts: [{ text: promptText }] }]\r\n      };\r\n      \r\n      console.log('API 요청 시작, 프롬프트 길이:', promptText.length);\r\n      \r\n      // 20초 타임아웃 (더 짧게 설정)\r\n      const timeoutId = setTimeout(() => {\r\n        console.error('API 호출 타임아웃');\r\n        loadingDiv.remove();\r\n        \r\n        // 단순 메시지 대신 즉시 기본 응답 제공\r\n        const fallbackResponse = `\r\nCP님, 현재 AI 응답 생성에 문제가 발생했습니다. \r\n\r\n자동 생성된 접근성 점검 결과는 다음과 같습니다:\r\n- 키보드 접근성 확인이 필요합니다.\r\n- 대체 텍스트 제공 여부를 확인해보세요.\r\n- 색상 대비가 충분한지 확인하세요.\r\n\r\n더 자세한 분석을 위해 질문을 간결하게 다시 작성해주시거나, 나중에 다시 시도해보세요.\r\n        `;\r\n        \r\n        addBotMessage(fallbackResponse);\r\n      }, 20000);\r\n      \r\n      // 에러 카운터 추가\r\n      if (!window.apiErrorCount) window.apiErrorCount = 0;\r\n      \r\n      // 이전 API 요청 실패 여부 확인\r\n      if (window.apiErrorCount > 2) {\r\n        clearTimeout(timeoutId);\r\n        loadingDiv.remove();\r\n        \r\n        // 3번 이상 실패 시 즉시 폴백 응답\r\n        const fallbackResponse = `\r\nCP님, API 서비스에 일시적인 문제가 발생했습니다.\r\n나중에 다시 시도해주세요.\r\n        `;\r\n        \r\n        addBotMessage(fallbackResponse);\r\n        return;\r\n      }\r\n      \r\n      // API 호출\r\n      fetch(`https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-lite:generateContent?key=${API_KEY}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(requestData)\r\n      })\r\n      .then(response => {\r\n        clearTimeout(timeoutId);\r\n        if (!response.ok) {\r\n          window.apiErrorCount++; // 에러 카운트 증가\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n        window.apiErrorCount = 0; // 성공 시 에러 카운트 초기화\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        loadingDiv.remove();\r\n        \r\n        if (data.candidates && data.candidates[0] && data.candidates[0].content && data.candidates[0].content.parts && data.candidates[0].content.parts[0]) {\r\n          const aiResponse = data.candidates[0].content.parts[0].text;\r\n          addBotMessage(aiResponse);\r\n        } else {\r\n          window.apiErrorCount++; // 잘못된 응답 구조도 에러로 간주\r\n          console.error('API 응답 구조 문제:', data);\r\n          addBotMessage(\"죄송합니다. 응답 생성에 문제가 발생했습니다. 다시 시도해주세요.\");\r\n        }\r\n      })\r\n      .catch(error => {\r\n        clearTimeout(timeoutId);\r\n        loadingDiv.remove();\r\n        window.apiErrorCount++; // 에러 카운트 증가\r\n        console.error('API 호출 오류:', error);\r\n        \r\n        // 에러 메시지를 간결하게 표시\r\n        addBotMessage(`죄송합니다. API 서비스 연결에 문제가 발생했습니다.`);\r\n      });\r\n    }\r\n  \r\n    function addUserMessage(message) {\r\n      const chatMessages = document.querySelector('.chat-messages');\r\n      const messageDiv = document.createElement('div');\r\n      messageDiv.className = 'chat-message chat-user';\r\n      messageDiv.textContent = message;\r\n      chatMessages.appendChild(messageDiv);\r\n      \r\n      // 맨 아래로 스크롤 - 통합 함수 사용\r\n      scrollToBottom(chatMessages);\r\n      \r\n      // 추가 스크롤 처리\r\n      setTimeout(() => scrollToBottom(chatMessages), 100);\r\n      \r\n      // 스크롤이 제대로 되지 않을 경우를 위한 보호 장치\r\n      setTimeout(() => {\r\n        const isAtBottom = chatMessages.scrollHeight - chatMessages.clientHeight - chatMessages.scrollTop < 30;\r\n        if (!isAtBottom) {\r\n          console.log('사용자 메시지 스크롤 강제 조정');\r\n          scrollToBottom(chatMessages);\r\n        }\r\n      }, 300);\r\n    }\r\n  \r\n    function addBotMessage(message) {\r\n      const chatMessages = document.querySelector('.chat-messages');\r\n      const messageDiv = document.createElement('div');\r\n      messageDiv.className = 'chat-message chat-bot';\r\n      messageDiv.innerHTML = formatAIResponse(message);\r\n      \r\n      // 현재 채팅 창의 스크롤 상태 확인\r\n      const wasAtBottom = chatMessages.scrollHeight - chatMessages.clientHeight - chatMessages.scrollTop < 30;\r\n      \r\n      // 메시지 추가\r\n      chatMessages.appendChild(messageDiv);\r\n      \r\n      // 스크롤 강제 처리 (현재 스크롤 상태와 무관하게 항상 맨 아래로)\r\n      scrollToBottom(chatMessages);\r\n      \r\n      // 이미지와 스타일이 로드된 후 추가 스크롤 처리\r\n      const allImages = messageDiv.querySelectorAll('img');\r\n      if (allImages.length > 0) {\r\n        // 이미지가 있는 경우 이미지 로드 완료 후 스크롤\r\n        allImages.forEach(img => {\r\n          img.onload = () => scrollToBottom(chatMessages);\r\n        });\r\n      }\r\n      \r\n      // 메시지에 포함된 이미지 로드 완료 후 추가 스크롤\r\n      setTimeout(() => scrollToBottom(chatMessages), 100);\r\n      setTimeout(() => scrollToBottom(chatMessages), 500);\r\n      setTimeout(() => scrollToBottom(chatMessages), 1000);\r\n      \r\n      // 웹 페이지가 완전히 로드된 이후 추가 스크롤\r\n      window.addEventListener('load', () => scrollToBottom(chatMessages));\r\n      \r\n      // 스크롤이 제대로 되지 않을 경우를 위한 마지막 보호 장치\r\n      (function ensureScroll(count = 0) {\r\n        if (count > 10) return; // 최대 10번 시도\r\n        \r\n        setTimeout(() => {\r\n          scrollToBottom(chatMessages);\r\n          \r\n          // 스크롤이 제대로 되었는지 확인\r\n          const isAtBottom = chatMessages.scrollHeight - chatMessages.clientHeight - chatMessages.scrollTop < 30;\r\n          if (!isAtBottom) {\r\n            // 스크롤이 맨 아래가 아니면 다시 시도\r\n            ensureScroll(count + 1);\r\n          }\r\n        }, 300 * (count + 1)); // 점점 지연 시간 증가\r\n      })();\r\n      \r\n      // 대화 기록에 추가\r\n      if (!window.chatHistory) window.chatHistory = [];\r\n      window.chatHistory.push({ role: 'bot', content: message });\r\n      \r\n      // 최대 5개 메시지만 기억\r\n      if (window.chatHistory.length > 10) {\r\n        window.chatHistory = window.chatHistory.slice(window.chatHistory.length - 10);\r\n      }\r\n      \r\n      // 채팅 영역 스크롤 이벤트 처리\r\n      chatMessages.onscroll = function() {\r\n        // 스크롤 상태 확인\r\n        const isNearBottom = chatMessages.scrollHeight - chatMessages.clientHeight - chatMessages.scrollTop < 30;\r\n        console.log('스크롤 상태:', isNearBottom ? '맨 아래' : '스크롤 중');\r\n      };\r\n    }\r\n  \r\n    function runFullScan() {\r\n      // 로딩 메시지 표시\r\n      const statusDiv = document.createElement('div');\r\n      statusDiv.className = 'alert-message';\r\n      statusDiv.textContent = 'axe-core를 이용한 전체 검사를 시작합니다...';\r\n      document.body.appendChild(statusDiv);\r\n      \r\n      // axe-core를 사용한 전체 분석 수행\r\n      loadAxeCore()\r\n        .then(axe => {\r\n          statusDiv.textContent = 'axe-core 분석 중...';\r\n          return axe.run(document, {\r\n            resultTypes: ['violations', 'incomplete', 'passes', 'inapplicable'],\r\n            selectors: true\r\n          });\r\n        })\r\n        .then(results => {\r\n          statusDiv.textContent = '색상 대비 분석 중...';\r\n          // axe-core 결과를 저장\r\n          window.axeResults = results;\r\n          console.log('axe-core 분석 결과:', results);\r\n          \r\n          // 기존 분석 수행\r\n          activateTab('contrast');\r\n          checkColorContrast();\r\n          \r\n          setTimeout(() => {\r\n            statusDiv.textContent = 'WCAG 접근성 분석 중...';\r\n            activateTab('wcag');\r\n            analyzeWCAG();\r\n            \r\n            setTimeout(() => {\r\n              statusDiv.textContent = 'UDL 학습성 분석 중...';\r\n              activateTab('udl');\r\n              analyzeForUDL();\r\n              \r\n              setTimeout(() => {\r\n                statusDiv.textContent = '전체 검사가 완료되었습니다!';\r\n                activateTab('summary');\r\n                \r\n                // 3초 후 알림 메시지 제거\r\n                setTimeout(() => {\r\n                  document.body.removeChild(statusDiv);\r\n                }, 3000);\r\n              }, 1000);\r\n            }, 1000);\r\n          }, 1000);\r\n        })\r\n        .catch(error => {\r\n          console.error('전체 스캔 중 오류 발생:', error);\r\n          statusDiv.textContent = '전체 검사 중 오류가 발생했습니다. 개별 검사를 진행합니다.';\r\n          \r\n          // 오류 발생 시 기존 방식으로 진행\r\n          activateTab('contrast');\r\n          checkColorContrast();\r\n          \r\n          setTimeout(() => {\r\n            activateTab('wcag');\r\n            analyzeWCAG();\r\n            \r\n            setTimeout(() => {\r\n              activateTab('udl');\r\n              analyzeForUDL();\r\n              \r\n              setTimeout(() => {\r\n                activateTab('summary');\r\n                \r\n                // 3초 후 알림 메시지 제거\r\n                setTimeout(() => {\r\n                  document.body.removeChild(statusDiv);\r\n                }, 3000);\r\n              }, 1000);\r\n            }, 1000);\r\n          }, 1000);\r\n        });\r\n    }\r\n  \r\n    function downloadReport() {\r\n      // HTML 보고서 생성\r\n      const reportTitle = document.title || 'Untitled Page';\r\n      const timestamp = new Date().toLocaleString();\r\n      \r\n      let reportHtml = `\r\n        <!DOCTYPE html>\r\n        <html lang=\"ko\">\r\n        <head>\r\n          <meta charset=\"UTF-8\">\r\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n          <title>${reportTitle} - 웹 접근성 및 UDL 분석 보고서</title>\r\n          <style>\r\n            body { font-family: Arial, sans-serif; line-height: 1.6; margin: 0; padding: 20px; color: #333; }\r\n            header { margin-bottom: 30px; }\r\n            h1 { color: #2c5282; }\r\n            h2 { color: #3a7bd5; margin-top: 30px; border-bottom: 1px solid #e9ecef; padding-bottom: 10px; }\r\n            h3 { margin-top: 20px; }\r\n            .report-section { margin-bottom: 20px; }\r\n            .summary-box { background: #f8f9fa; padding: 15px; border-radius: 5px; margin-bottom: 20px; }\r\n            .fail-item { background: rgba(250, 82, 82, 0.05); padding: 10px; margin: 10px 0; border-left: 3px solid #fa5252; }\r\n            .pass-item { background: rgba(64, 192, 87, 0.05); padding: 10px; margin: 10px 0; border-left: 3px solid #40c057; }\r\n            footer { margin-top: 50px; font-size: 12px; color: #6c757d; }\r\n          </style>\r\n        </head>\r\n        <body>\r\n          <header>\r\n            <h1>${reportTitle} - 색상 대비 분석 보고서</h1>\r\n            <p>생성일시: ${timestamp}</p>\r\n            <p>URL: ${window.location.href}</p>\r\n          </header>\r\n          \r\n          <div class=\"report-section\">\r\n            <h2>요약</h2>\r\n            <div class=\"summary-box\">\r\n              <p>이 보고서는 WCAG 2.2 지침의 색상 대비 요구사항에 따라 웹 페이지를 분석한 결과입니다.</p>\r\n      `;\r\n      \r\n      // 색상 대비 요약\r\n      const contrastFails = document.querySelectorAll('.contrast-item.contrast-fail').length;\r\n      const contrastTotal = document.querySelectorAll('.contrast-item').length;\r\n      const contrastPassRate = contrastTotal ? Math.round((contrastTotal - contrastFails) / contrastTotal * 100) : 0;\r\n      \r\n      reportHtml += `\r\n            <p><strong>색상 대비:</strong> ${contrastTotal}개 중 ${contrastTotal - contrastFails}개 통과 (${contrastPassRate}%)</p>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"report-section\">\r\n            <h2>색상 대비 분석</h2>\r\n      `;\r\n      \r\n      // 색상 대비 실패 항목\r\n      if (contrastFails > 0) {\r\n        reportHtml += `<h3>색상 대비 부적합 항목 (${contrastFails}개)</h3>`;\r\n        \r\n        document.querySelectorAll('.contrast-item.contrast-fail').forEach(item => {\r\n          const itemText = item.querySelector('.item-text').textContent;\r\n          const ratioMatch = item.querySelector('.ratio-value strong');\r\n          const contrast = ratioMatch ? ratioMatch.textContent.replace(':1', '') : '?';\r\n          \r\n          // 색상 정보 추출\r\n          const textColorChip = item.querySelector('.color-chip:first-child .color-code');\r\n          const bgColorChip = item.querySelector('.color-chip:last-child .color-code');\r\n          \r\n          const textColor = textColorChip ? textColorChip.textContent : '#000000';\r\n          const bgColor = bgColorChip ? bgColorChip.textContent : '#FFFFFF';\r\n          \r\n          reportHtml += `\r\n            <div class=\"fail-item\">\r\n              <p>텍스트: \"${itemText}\"</p>\r\n              <p>대비율: ${contrast}:1</p>\r\n              <p>텍스트 색상: ${textColor}, 배경 색상: ${bgColor}</p>\r\n            </div>\r\n          `;\r\n        });\r\n      }\r\n      \r\n      // 색상 대비 통과 항목\r\n      const contrastPasses = contrastTotal - contrastFails;\r\n      if (contrastPasses > 0) {\r\n        reportHtml += `<h3>색상 대비 적합 항목 (${contrastPasses}개)</h3>`;\r\n        \r\n        document.querySelectorAll('.contrast-item.contrast-pass').forEach(item => {\r\n          const itemText = item.querySelector('.item-text').textContent;\r\n          const ratioMatch = item.querySelector('.ratio-value strong');\r\n          const contrast = ratioMatch ? ratioMatch.textContent.replace(':1', '') : '?';\r\n          \r\n          // 색상 정보 추출\r\n          const textColorChip = item.querySelector('.color-chip:first-child .color-code');\r\n          const bgColorChip = item.querySelector('.color-chip:last-child .color-code');\r\n          \r\n          const textColor = textColorChip ? textColorChip.textContent : '#000000';\r\n          const bgColor = bgColorChip ? bgColorChip.textContent : '#FFFFFF';\r\n          \r\n          reportHtml += `\r\n            <div class=\"pass-item\">\r\n              <p>텍스트: \"${itemText}\"</p>\r\n              <p>대비율: ${contrast}:1</p>\r\n              <p>텍스트 색상: ${textColor}, 배경 색상: ${bgColor}</p>\r\n            </div>\r\n          `;\r\n        });\r\n      }\r\n      \r\n      reportHtml += `\r\n          </div>\r\n          \r\n          <div class=\"report-section\">\r\n            <h2>웹 접근성 분석</h2>\r\n            <div class=\"summary-box\">\r\n              <p>이 보고서는 한국형 웹 콘텐츠 접근성 지침 2.2를 기준으로 페이지를 분석한 결과입니다.</p>\r\n            </div>\r\n      `;\r\n      \r\n      // WCAG 카테고리별 결과\r\n      for (const [key, category] of Object.entries(KWCAG22)) {\r\n        reportHtml += `<h3>${category.name}</h3>`;\r\n        \r\n        // 해당 카테고리의 항목들을 추출\r\n        const items = Array.from(document.querySelectorAll(`#tab-content-wcag .guideline-item[data-category=\"${key}\"]`));\r\n        \r\n        if (items.length === 0) {\r\n          continue; // 해당 카테고리의 항목이 없으면 건너뛰기\r\n        }\r\n        \r\n        items.forEach(item => {\r\n          const title = item.querySelector('h4')?.textContent.trim() || '';\r\n          const desc = item.querySelector('p')?.textContent.trim() || '';\r\n          const status = item.classList.contains('pass') ? 'pass' : \r\n                       item.classList.contains('fail') ? 'fail' : 'review';\r\n          \r\n          // 결과 메시지 추출\r\n          const messageElement = item.querySelector('p:nth-child(3)');\r\n          const message = messageElement ? messageElement.textContent.trim() : '';\r\n          \r\n          reportHtml += `\r\n            <div class=\"${status}-item\">\r\n              <p><strong>${title}</strong></p>\r\n              <p>${desc}</p>\r\n              ${message ? `<p>${message}</p>` : ''}\r\n            </div>\r\n          `;\r\n        });\r\n      }\r\n      \r\n      // UDL 분석 결과\r\n      reportHtml += `\r\n          </div>\r\n          \r\n          <div class=\"report-section\">\r\n            <h2>UDL 원칙 분석</h2>\r\n            <div class=\"summary-box\">\r\n              <p>UDL(보편적 학습 설계) 원칙에 따른 웹 페이지 분석 결과입니다.</p>\r\n            </div>\r\n      `;\r\n      \r\n      // UDL 원칙별 결과\r\n      for (const [key, principle] of Object.entries(UDL_PRINCIPLES)) {\r\n        reportHtml += `\r\n          <h3>${principle.name}</h3>\r\n          <p>${principle.desc}</p>\r\n          <ul>\r\n        `;\r\n        \r\n        principle.suggestions.forEach(suggestion => {\r\n          reportHtml += `<li>${suggestion}</li>`;\r\n        });\r\n        \r\n        reportHtml += `</ul>`;\r\n      }\r\n      \r\n      // AI 분석 결과가 있는 경우\r\n      const aiResponseDiv = document.querySelector('#tab-content-udl .ai-response');\r\n      \r\n      if (aiResponseDiv) {\r\n        reportHtml += `\r\n          <h3>AI 분석 결과</h3>\r\n          <div class=\"summary-box\">\r\n            ${aiResponseDiv.innerHTML}\r\n          </div>\r\n        `;\r\n      }\r\n      \r\n      reportHtml += `\r\n          </div>\r\n          \r\n          <footer>\r\n            <p>이 보고서는 UDL 분석 도구에 의해 자동으로 생성되었습니다.</p>\r\n            <p>분석에 axe-core ${window.axeResults ? window.axeResults.testEngine.version : ''}이 사용되었습니다.</p>\r\n            <p>생성일시: ${timestamp}</p>\r\n          </footer>\r\n        </body>\r\n        </html>\r\n      `;\r\n      \r\n      // Blob 생성 및 다운로드\r\n      const blob = new Blob([reportHtml], { type: 'text/html' });\r\n      const url = URL.createObjectURL(blob);\r\n      const a = document.createElement('a');\r\n      a.href = url;\r\n      a.download = `${reportTitle.replace(/\\s+/g, '-')}-접근성-보고서-${new Date().toISOString().slice(0, 10)}.html`;\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      document.body.removeChild(a);\r\n      URL.revokeObjectURL(url);\r\n    }\r\n  \r\n    function removeHighlights() {\r\n      document.querySelectorAll('.item-highlight').forEach(el => {\r\n        el.classList.remove('item-highlight');\r\n      });\r\n    }\r\n  \r\n    // 현재 페이지의 접근성 분석 함수 추가\r\n    function analyzeCurrentPage() {\r\n      const analysis = {\r\n        summary: '',\r\n        issues: [],\r\n        samples: ''\r\n      };\r\n      \r\n      // axe-core를 사용한 접근성 분석 먼저 수행\r\n      loadAxeCore()\r\n        .then(axe => {\r\n          // axe-core 설정\r\n          axe.configure({\r\n            reporter: 'v2',\r\n            rules: []\r\n          });\r\n          \r\n          // axe-core 실행\r\n          return axe.run(document, {\r\n            resultTypes: ['violations', 'incomplete'],\r\n            selectors: true\r\n          });\r\n        })\r\n        .then(results => {\r\n          // axe-core 결과를 분석 객체에 추가\r\n          if (results.violations.length > 0) {\r\n            analysis.issues.push(`- axe-core 분석: ${results.violations.length}개의 접근성 위반 발견`);\r\n            \r\n            // 가장 심각한 위반사항 샘플 추가\r\n            const criticalViolations = results.violations.filter(v => v.impact === 'critical');\r\n            if (criticalViolations.length > 0) {\r\n              const firstViolation = criticalViolations[0];\r\n              analysis.samples += `주요 접근성 위반 예시 (${firstViolation.id}):\\n`;\r\n              analysis.samples += `문제: ${firstViolation.help}\\n`;\r\n              if (firstViolation.nodes && firstViolation.nodes.length > 0) {\r\n                analysis.samples += `HTML: ${firstViolation.nodes[0].html}\\n\\n`;\r\n              }\r\n            }\r\n          }\r\n          \r\n          if (results.incomplete.length > 0) {\r\n            analysis.issues.push(`- axe-core 분석: ${results.incomplete.length}개의 항목 수동 검토 필요`);\r\n          }\r\n          \r\n          // 기존 분석 로직도 계속 실행\r\n          continueAnalysis();\r\n        })\r\n        .catch(error => {\r\n          console.error('axe-core 분석 오류:', error);\r\n          // 오류 발생 시 기존 분석 로직으로 진행\r\n          continueAnalysis();\r\n        });\r\n        \r\n      function continueAnalysis() {\r\n        // 1. 이미지 대체 텍스트 확인\r\n        const images = Array.from(document.querySelectorAll('img')).filter(img => !img.closest('#udl-accessibility-panel'));\r\n        const imagesWithoutAlt = images.filter(img => !img.hasAttribute('alt'));\r\n        \r\n        if (imagesWithoutAlt.length > 0) {\r\n          analysis.issues.push(`- 대체 텍스트가 없는 이미지 ${imagesWithoutAlt.length}개 발견`);\r\n          if (imagesWithoutAlt[0]) {\r\n            analysis.samples += `이미지 태그 예시:\\n${imagesWithoutAlt[0].outerHTML}\\n\\n`;\r\n          }\r\n        }\r\n        \r\n        // 2. 색상 대비 문제 확인\r\n        const contrastResults = document.querySelectorAll('.contrast-item');\r\n        const contrastFails = document.querySelectorAll('.contrast-item.contrast-fail');\r\n        \r\n        if (contrastFails.length > 0) {\r\n          analysis.issues.push(`- 색상 대비가 부적절한 요소 ${contrastFails.length}개 발견`);\r\n        }\r\n        \r\n        // 3. 페이지 제목 확인\r\n        if (!document.title || document.title.trim() === '') {\r\n          analysis.issues.push('- 페이지 제목이 없음');\r\n        }\r\n        \r\n        // 4. 폼 레이블 확인\r\n        const formElements = Array.from(document.querySelectorAll('input, select, textarea')).filter(el => !el.closest('#udl-accessibility-panel'));\r\n        const formElementsWithoutLabels = formElements.filter(el => {\r\n          const id = el.getAttribute('id');\r\n          if (!id) return true;\r\n          \r\n          // 명시적인 레이블 확인\r\n          const hasExplicitLabel = document.querySelector(`label[for=\"${id}\"]`);\r\n          // 암묵적인 레이블 확인\r\n          const hasImplicitLabel = el.closest('label');\r\n          // aria-labelledby 확인\r\n          const ariaLabelledBy = el.getAttribute('aria-labelledby');\r\n          // aria-label 확인\r\n          const ariaLabel = el.getAttribute('aria-label');\r\n          \r\n          return !hasExplicitLabel && !hasImplicitLabel && !ariaLabelledBy && !ariaLabel;\r\n        });\r\n        \r\n        if (formElementsWithoutLabels.length > 0) {\r\n          analysis.issues.push(`- 레이블이 없는 폼 요소 ${formElementsWithoutLabels.length}개 발견`);\r\n          if (formElementsWithoutLabels[0]) {\r\n            analysis.samples += `레이블 없는 폼 요소 예시:\\n${formElementsWithoutLabels[0].outerHTML}\\n\\n`;\r\n          }\r\n        }\r\n        \r\n        // 5. 헤딩 구조 확인\r\n        const headings = Array.from(document.querySelectorAll('h1, h2, h3, h4, h5, h6')).filter(h => !h.closest('#udl-accessibility-panel'));\r\n        const hasH1 = headings.some(h => h.tagName.toLowerCase() === 'h1');\r\n        \r\n        if (!hasH1 && headings.length > 0) {\r\n          analysis.issues.push('- H1 태그가 없음');\r\n        }\r\n        \r\n        // 6. ARIA 역할 사용 확인\r\n        const elementsWithARIA = Array.from(document.querySelectorAll('[role]')).filter(el => !el.closest('#udl-accessibility-panel'));\r\n        const validRoles = [\r\n          'alert', 'alertdialog', 'application', 'article', 'banner', 'button', 'cell', 'checkbox', \r\n          'columnheader', 'combobox', 'complementary', 'contentinfo', 'definition', 'dialog', \r\n          'directory', 'document', 'feed', 'figure', 'form', 'grid', 'gridcell', 'group', 'heading', \r\n          'img', 'link', 'list', 'listbox', 'listitem', 'log', 'main', 'marquee', 'math', 'menu', \r\n          'menubar', 'menuitem', 'menuitemcheckbox', 'menuitemradio', 'navigation', 'none', 'note', \r\n          'option', 'presentation', 'progressbar', 'radio', 'radiogroup', 'region', 'row', 'rowgroup', \r\n          'rowheader', 'scrollbar', 'search', 'searchbox', 'separator', 'slider', 'spinbutton', \r\n          'status', 'switch', 'tab', 'table', 'tablist', 'tabpanel', 'term', 'textbox', 'timer', \r\n          'toolbar', 'tooltip', 'tree', 'treegrid', 'treeitem'\r\n        ];\r\n        \r\n        const elementsWithInvalidARIA = elementsWithARIA.filter(el => {\r\n          const role = el.getAttribute('role');\r\n          return !validRoles.includes(role);\r\n        });\r\n        \r\n        if (elementsWithInvalidARIA.length > 0) {\r\n          analysis.issues.push(`- 유효하지 않은 ARIA 역할을 가진 요소 ${elementsWithInvalidARIA.length}개 발견`);\r\n          if (elementsWithInvalidARIA[0]) {\r\n            analysis.samples += `유효하지 않은 ARIA 역할 예시:\\n${elementsWithInvalidARIA[0].outerHTML}\\n\\n`;\r\n          }\r\n        }\r\n        \r\n        // 요약 정보 생성\r\n        if (analysis.issues.length === 0) {\r\n          analysis.summary = '자동 분석 결과, 주요 접근성 문제가 발견되지 않았습니다.';\r\n          analysis.issues.push('- 자동 검출된 주요 접근성 문제 없음');\r\n        } else {\r\n          analysis.summary = `자동 분석 결과, ${analysis.issues.length}개의 접근성 문제가 발견되었습니다.`;\r\n        }\r\n        \r\n        return analysis;\r\n      }\r\n    }\r\n\r\n    // 기존 analyzeWCAGItem 함수 재구현\r\n    function analyzeWCAGItem(item) {\r\n      // 각 항목에 대한 분석 로직\r\n      // 여기서는 간단한 분석만 수행하며 실제 구현 시 더 정교한 검사 필요\r\n      switch (item.id) {\r\n        case \"1.1.1\": // 대체 텍스트\r\n          const images = Array.from(document.querySelectorAll('img')).filter(img => !img.closest('#udl-accessibility-panel'));\r\n          const imagesWithoutAlt = images.filter(img => !img.hasAttribute('alt'));\r\n          \r\n          if (imagesWithoutAlt.length > 0) {\r\n            return {\r\n              status: 'fail',\r\n              message: `대체 텍스트가 없는 이미지 ${imagesWithoutAlt.length}개 발견`,\r\n              elements: imagesWithoutAlt\r\n            };\r\n          }\r\n          return { status: 'pass', message: `모든 이미지(${images.length}개)에 대체 텍스트 제공됨` };\r\n  \r\n        case \"1.2.1\": // 자막 제공\r\n          const videos = Array.from(document.querySelectorAll('video, audio')).filter(v => !v.closest('#udl-accessibility-panel'));\r\n          if (videos.length > 0) {\r\n            return { \r\n              status: 'review', \r\n              message: `멀티미디어 콘텐츠 ${videos.length}개 발견. 자막 또는 대체 수단 제공 확인 필요`,\r\n              elements: videos\r\n            };\r\n          }\r\n          return { status: 'pass', message: '멀티미디어 콘텐츠가 발견되지 않음' };\r\n  \r\n        case \"1.3.1\": // 표의 구성\r\n          const tables = Array.from(document.querySelectorAll('table')).filter(t => !t.closest('#udl-accessibility-panel'));\r\n          const tablesWithoutTh = tables.filter(table => table.querySelectorAll('th').length === 0);\r\n          \r\n          if (tablesWithoutTh.length > 0) {\r\n            return { \r\n              status: 'fail', \r\n              message: `제목 셀(th)이 없는 표 ${tablesWithoutTh.length}개 발견`,\r\n              elements: tablesWithoutTh\r\n            };\r\n          }\r\n          return { status: tables.length > 0 ? 'pass' : 'review', message: tables.length > 0 ? `모든 표(${tables.length}개)에 제목 셀 제공됨` : '표 요소 발견되지 않음' };\r\n  \r\n        case \"1.3.2\": // 콘텐츠의 선형구조\r\n          // 단순 검사로 tabindex 값이 0보다 큰 경우 검색\r\n          const elementsWithPositiveTabindex = Array.from(document.querySelectorAll('[tabindex]')).filter(el => \r\n            !el.closest('#udl-accessibility-panel') && parseInt(el.getAttribute('tabindex')) > 0);\r\n          \r\n          if (elementsWithPositiveTabindex.length > 0) {\r\n            return { \r\n              status: 'fail', \r\n              message: `콘텐츠의 논리적 순서를 방해할 수 있는 양수 tabindex ${elementsWithPositiveTabindex.length}개 발견`,\r\n              elements: elementsWithPositiveTabindex\r\n            };\r\n          }\r\n          return { status: 'pass', message: '논리적 순서에 영향을 주는 요소 발견되지 않음' };\r\n  \r\n        case \"1.4.3\": // 텍스트 콘텐츠의 명도 대비\r\n          const contrastResults = document.querySelectorAll('.contrast-item');\r\n          const contrastFails = document.querySelectorAll('.contrast-item.contrast-fail');\r\n          \r\n          if (contrastFails.length > 0) {\r\n            // 첫 번째 실패 항목의 요소를 가져옴\r\n            const firstFailElement = Array.from(document.querySelectorAll('p, h1, h2, h3, h4, h5, h6, a, span, li, td, th, div, label, button'))\r\n              .filter(el => !el.closest('#udl-accessibility-panel') && el.classList.contains('item-highlight'));\r\n            \r\n            return { \r\n              status: 'fail', \r\n              message: `색상 대비가 부적합한 텍스트 ${contrastFails.length}개 발견`,\r\n              elements: firstFailElement.length > 0 ? [firstFailElement[0]] : []\r\n            };\r\n          }\r\n          return { status: 'pass', message: `모든 텍스트 콘텐츠의 색상 대비가 적합함` };\r\n  \r\n        case \"2.1.1\": // 키보드 사용 보장\r\n          // onclick 이벤트만 있고 onkeydown/onkeyup/onkeypress가 없는 요소 찾기\r\n          const interactiveElements = Array.from(document.querySelectorAll('a, button, [role=\"button\"], [onclick]'))\r\n            .filter(el => !el.closest('#udl-accessibility-panel'));\r\n          \r\n          const keyboardInaccessible = interactiveElements.filter(el => {\r\n            const hasClick = el.hasAttribute('onclick') || el.onclick;\r\n            const hasKeyEvent = el.hasAttribute('onkeydown') || el.onkeydown || \r\n                               el.hasAttribute('onkeyup') || el.onkeyup ||\r\n                               el.hasAttribute('onkeypress') || el.onkeypress;\r\n            const isDisabled = el.hasAttribute('disabled') || el.getAttribute('aria-disabled') === 'true';\r\n            \r\n            // a 태그의 href가 없거나 '#'인 경우와 button이 아닌데 role=\"button\"도 없는 경우\r\n            const isInaccesible = (el.tagName === 'A' && (!el.hasAttribute('href') || el.getAttribute('href') === '#')) ||\r\n                                (el.tagName !== 'BUTTON' && el.getAttribute('role') !== 'button' && hasClick);\r\n            \r\n            return !isDisabled && (isInaccesible || (hasClick && !hasKeyEvent));\r\n          });\r\n          \r\n          if (keyboardInaccessible.length > 0) {\r\n            return { \r\n              status: 'fail', \r\n              message: `키보드로 접근이 어려울 수 있는 상호작용 요소 ${keyboardInaccessible.length}개 발견`,\r\n              elements: keyboardInaccessible\r\n            };\r\n          }\r\n          return { status: 'pass', message: '모든 상호작용 요소가 키보드로 접근 가능함' };\r\n  \r\n        case \"2.4.1\": // 반복 영역 건너뛰기\r\n          // 건너뛰기 링크 찾기\r\n          const skipLinks = Array.from(document.querySelectorAll('a[href^=\"#\"]'))\r\n            .filter(a => \r\n              !a.closest('#udl-accessibility-panel') && \r\n              (a.textContent.toLowerCase().includes('skip') || \r\n               a.textContent.includes('건너뛰') || \r\n               a.textContent.includes('바로가기'))\r\n            );\r\n          \r\n          if (skipLinks.length === 0) {\r\n            return { \r\n              status: 'fail', \r\n              message: '반복 영역을 건너뛸 수 있는 링크가 발견되지 않음',\r\n              elements: []\r\n            };\r\n          }\r\n          return { status: 'pass', message: `건너뛰기 링크 ${skipLinks.length}개 발견됨` };\r\n  \r\n        case \"2.4.2\": // 제목 제공\r\n          // 페이지 타이틀 확인\r\n          if (!document.title || document.title.trim() === '') {\r\n            return { \r\n              status: 'fail', \r\n              message: '페이지에 제목이 제공되지 않음',\r\n              elements: [document.querySelector('head > title') || document.querySelector('head')]\r\n            };\r\n          }\r\n          \r\n          // 프레임 제목 확인\r\n          const frames = Array.from(document.querySelectorAll('iframe, frame')).filter(f => !f.closest('#udl-accessibility-panel'));\r\n          const framesWithoutTitle = frames.filter(frame => !frame.hasAttribute('title') || frame.getAttribute('title').trim() === '');\r\n          \r\n          if (framesWithoutTitle.length > 0) {\r\n            return { \r\n              status: 'fail', \r\n              message: `제목이 없는 프레임 ${framesWithoutTitle.length}개 발견`,\r\n              elements: framesWithoutTitle\r\n            };\r\n          }\r\n          \r\n          return { status: 'pass', message: '페이지 및 모든 프레임에 제목이 제공됨' };\r\n  \r\n        case \"3.3.2\": // 레이블 제공\r\n          // 레이블이 없는 입력 필드 찾기\r\n          const inputs = Array.from(document.querySelectorAll('input, textarea, select')).filter(input => \r\n            !input.closest('#udl-accessibility-panel') && \r\n            input.type !== 'hidden' && \r\n            input.type !== 'button' && \r\n            input.type !== 'submit' && \r\n            input.type !== 'reset' && \r\n            input.type !== 'image');\r\n          \r\n          const inputsWithoutLabel = inputs.filter(input => {\r\n            const id = input.getAttribute('id');\r\n            const hasExplicitLabel = id && document.querySelector(`label[for=\"${id}\"]`);\r\n            const hasImplicitLabel = input.closest('label');\r\n            const hasAriaLabel = input.hasAttribute('aria-label') && input.getAttribute('aria-label').trim() !== '';\r\n            const hasAriaLabelledBy = input.hasAttribute('aria-labelledby') && \r\n                                    document.getElementById(input.getAttribute('aria-labelledby'));\r\n            const hasTitle = input.hasAttribute('title') && input.getAttribute('title').trim() !== '';\r\n            \r\n            return !(hasExplicitLabel || hasImplicitLabel || hasAriaLabel || hasAriaLabelledBy || hasTitle);\r\n          });\r\n          \r\n          if (inputsWithoutLabel.length > 0) {\r\n            return { \r\n              status: 'fail', \r\n              message: `레이블이 없는 입력 필드 ${inputsWithoutLabel.length}개 발견`,\r\n              elements: inputsWithoutLabel\r\n            };\r\n          }\r\n          return { status: inputs.length > 0 ? 'pass' : 'review', message: inputs.length > 0 ? `모든 입력 필드(${inputs.length}개)에 레이블 제공됨` : '입력 필드 발견되지 않음' };\r\n  \r\n        case \"4.1.1\": // 마크업 오류 방지\r\n          // 간단한 검사로 태그 중첩 문제 확인\r\n          const hasInvalidNesting = document.querySelector('a a, button button, h1 h1, h2 h2, h3 h3, h4 h4, h5 h5, h6 h6');\r\n          \r\n          if (hasInvalidNesting) {\r\n            return { \r\n              status: 'fail', \r\n              message: '부적절한 태그 중첩 발견',\r\n              elements: [hasInvalidNesting]\r\n            };\r\n          }\r\n          \r\n          // ID 중복 확인\r\n          const ids = {};\r\n          const elementsWithId = document.querySelectorAll('[id]');\r\n          let duplicateIdElement = null;\r\n          \r\n          for (const el of elementsWithId) {\r\n            if (el.closest('#udl-accessibility-panel')) continue;\r\n            \r\n            const id = el.getAttribute('id');\r\n            if (ids[id]) {\r\n              duplicateIdElement = el;\r\n              break;\r\n            }\r\n            ids[id] = true;\r\n          }\r\n          \r\n          if (duplicateIdElement) {\r\n            return { \r\n              status: 'fail', \r\n              message: '중복된 ID 값 발견',\r\n              elements: [duplicateIdElement]\r\n            };\r\n          }\r\n          \r\n          return { status: 'pass', message: '마크업 오류가 발견되지 않음' };\r\n  \r\n        // 다른 검사항목에 대한 분석 로직 추가 가능\r\n        default:\r\n          return { status: 'review', message: '자동 검사가 불가능한 항목입니다. 수동 검토가 필요합니다.' };\r\n      }\r\n    }\r\n\r\n    // 스크롤을 항상 맨 아래로 이동시키는 함수\r\n    function scrollToBottom(container) {\r\n      if (!container) {\r\n        container = document.querySelector('.chat-messages');\r\n        if (!container) return;\r\n      }\r\n      \r\n      try {\r\n        // 즉시 스크롤\r\n        container.scrollTop = container.scrollHeight;\r\n        \r\n        // 보조 방법 - 스크롤 위치 강제 설정\r\n        requestAnimationFrame(() => {\r\n          container.scrollTop = container.scrollHeight;\r\n          \r\n          // 스크롤이 제대로 적용되었는지 확인\r\n          if (container.scrollTop + container.clientHeight < container.scrollHeight - 20) {\r\n            console.log('스크롤 강제 재조정');\r\n            container.scrollTop = container.scrollHeight;\r\n          }\r\n        });\r\n      } catch (error) {\r\n        console.error('스크롤 처리 중 오류:', error);\r\n      }\r\n    }\r\n\r\n    // KWCAG 요약 정보를 가져오는 함수\r\n    function getKWCAGSummaryForPrompt() {\r\n      let summary = '';\r\n      \r\n      // KWCAG22 객체의 모든 카테고리를 순회하며 문자열 구성\r\n      for (const [key, category] of Object.entries(KWCAG22)) {\r\n        summary += `## ${category.name}\\n`;\r\n        \r\n        // 각 카테고리의 항목들을 순회\r\n        category.items.forEach(item => {\r\n          summary += `- **${item.id} (${item.name})**: ${item.desc}\\n`;\r\n        });\r\n        \r\n        summary += '\\n';\r\n      }\r\n      \r\n      return summary;\r\n    }\r\n\r\n    // 색맹 시뮬레이션 관련 함수들\r\n    function checkColorBlindness() {\r\n      const colorblindContent = document.getElementById('tab-content-colorblind');\r\n      colorblindContent.innerHTML = '<div class=\"loading\">색맹 검사 도구 로딩 중...</div>';\r\n\r\n      setTimeout(() => {\r\n        colorblindContent.innerHTML = `\r\n          <div class=\"colorblind-tester\">\r\n            <div class=\"contrast-summary\">\r\n              <h3>색맹 시뮬레이션 도구</h3>\r\n              <p>웹 페이지의 색상이 색맹 사용자에게 어떻게 보이는지 시뮬레이션합니다.</p>\r\n              <p>아래에서 시뮬레이션할 색맹 유형을 선택하세요:</p>\r\n            </div>\r\n            \r\n            <div class=\"colorblind-controls\">\r\n              <div class=\"control-group\">\r\n                <label for=\"colorblind-type\">색맹 유형</label>\r\n                <select id=\"colorblind-type\" class=\"select-control\">\r\n                  <option value=\"normal\">일반 시력</option>\r\n                  <option value=\"protanopia\">적색맹 (Protanopia)</option>\r\n                  <option value=\"deuteranopia\">녹색맹 (Deuteranopia)</option>\r\n                  <option value=\"tritanopia\">청색맹 (Tritanopia)</option>\r\n                  <option value=\"achromatopsia\">완전색맹 (Achromatopsia)</option>\r\n                </select>\r\n              </div>\r\n              \r\n              <div class=\"control-group\">\r\n                <label for=\"colorblind-strength\">강도</label>\r\n                <input type=\"range\" id=\"colorblind-strength\" min=\"0\" max=\"100\" value=\"100\" class=\"range-control\">\r\n                <span id=\"strength-value\">100%</span>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"colorblind-preview\">\r\n              <div class=\"preview-container\">\r\n                <h4>원본 색상</h4>\r\n                <div class=\"color-samples original-samples\">\r\n                  <div class=\"color-sample\" style=\"background-color: #E53935;\">#E53935 (빨강)</div>\r\n                  <div class=\"color-sample\" style=\"background-color: #43A047;\">#43A047 (녹색)</div>\r\n                  <div class=\"color-sample\" style=\"background-color: #1E88E5;\">#1E88E5 (파랑)</div>\r\n                  <div class=\"color-sample\" style=\"background-color: #FDD835;\">#FDD835 (노랑)</div>\r\n                  <div class=\"color-sample\" style=\"background-color: #8E24AA;\">#8E24AA (보라)</div>\r\n                  <div class=\"color-sample\" style=\"background-color: #00ACC1;\">#00ACC1 (청록)</div>\r\n                  <div class=\"color-sample\" style=\"background-color: #FF9800;\">#FF9800 (주황)</div>\r\n                  <div class=\"color-sample\" style=\"background-color: #6D4C41;\">#6D4C41 (갈색)</div>\r\n                </div>\r\n              </div>\r\n              \r\n              <div class=\"preview-container\">\r\n                <h4>시뮬레이션 결과</h4>\r\n                <div class=\"color-samples\" id=\"colorblind-samples\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"colorblind-upload\">\r\n              <h4>이미지 색맹 시뮬레이션</h4>\r\n              <p>이미지를 업로드하여 색맹 시뮬레이션을 확인할 수 있습니다:</p>\r\n              <input type=\"file\" id=\"image-upload\" accept=\"image/*\" class=\"file-input\">\r\n              <div class=\"image-preview-container\">\r\n                <div class=\"image-preview\">\r\n                  <div class=\"preview-original\">\r\n                    <h5>원본 이미지</h5>\r\n                    <div id=\"original-image-preview\"></div>\r\n                  </div>\r\n                  <div class=\"preview-simulation\">\r\n                    <h5>시뮬레이션 결과</h5>\r\n                    <canvas id=\"simulation-canvas\"></canvas>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"colorblind-info\">\r\n              <h4>색맹에 대한 안내</h4>\r\n              <ul>\r\n                <li><strong>적색맹 (Protanopia):</strong> 적색 수용체의 기능이 약하거나 없어 빨강색을 식별하기 어렵습니다.</li>\r\n                <li><strong>녹색맹 (Deuteranopia):</strong> 녹색 수용체의 기능이 약하거나 없어 녹색을 식별하기 어렵습니다.</li>\r\n                <li><strong>청색맹 (Tritanopia):</strong> 청색 수용체의 기능이 약하거나 없어 파랑색을 식별하기 어렵습니다.</li>\r\n                <li><strong>완전색맹 (Achromatopsia):</strong> 모든 색상을 흑백으로만 인식합니다.</li>\r\n              </ul>\r\n              <h4>접근성 높은 디자인을 위한 팁</h4>\r\n              <ul>\r\n                <li>색상만으로 정보를 구분하지 말고 항상 텍스트나 아이콘, 패턴 등의 부가적인 방법을 함께 사용하세요.</li>\r\n                <li>색상 대비를 높게 유지하고, 특히 빨강/녹색 조합은 피하세요.</li>\r\n                <li>사용자가 색상을 개인화할 수 있는 옵션을 제공하세요.</li>\r\n                <li>중요한 UI 요소에는 색상 외에도 형태, 크기, 위치 등으로 차별화하세요.</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          \r\n          <style>\r\n            .colorblind-tester {\r\n              padding: 0 0 20px 0;\r\n            }\r\n            \r\n            .colorblind-controls {\r\n              display: flex;\r\n              flex-wrap: wrap;\r\n              gap: 16px;\r\n              margin-bottom: 24px;\r\n            }\r\n            \r\n            .control-group {\r\n              flex: 1;\r\n              min-width: 200px;\r\n            }\r\n            \r\n            .select-control {\r\n              width: 100%;\r\n              padding: 8px;\r\n              border-radius: 4px;\r\n              border: 1px solid #ced4da;\r\n              margin-top: 4px;\r\n            }\r\n            \r\n            .range-control {\r\n              width: 100%;\r\n              margin-top: 4px;\r\n            }\r\n            \r\n            .colorblind-preview {\r\n              display: flex;\r\n              flex-wrap: wrap;\r\n              gap: 20px;\r\n              margin-bottom: 24px;\r\n            }\r\n            \r\n            .preview-container {\r\n              flex: 1;\r\n              min-width: 250px;\r\n            }\r\n            \r\n            .color-samples {\r\n              display: grid;\r\n              grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));\r\n              gap: 12px;\r\n            }\r\n            \r\n            .color-sample {\r\n              padding: 12px;\r\n              border-radius: 4px;\r\n              color: white;\r\n              text-shadow: 0 0 2px rgba(0,0,0,0.7);\r\n              font-size: 12px;\r\n              display: flex;\r\n              align-items: center;\r\n              justify-content: center;\r\n              text-align: center;\r\n              height: 60px;\r\n            }\r\n            \r\n            .colorblind-upload {\r\n              margin-bottom: 24px;\r\n            }\r\n            \r\n            .file-input {\r\n              margin: 10px 0;\r\n            }\r\n            \r\n            .image-preview-container {\r\n              margin-top: 16px;\r\n            }\r\n            \r\n            .image-preview {\r\n              display: flex;\r\n              flex-wrap: wrap;\r\n              gap: 20px;\r\n            }\r\n            \r\n            .preview-original, .preview-simulation {\r\n              flex: 1;\r\n              min-width: 250px;\r\n            }\r\n            \r\n            #original-image-preview img, #simulation-canvas {\r\n              max-width: 100%;\r\n              border: 1px solid #ced4da;\r\n              border-radius: 4px;\r\n            }\r\n            \r\n            .colorblind-info {\r\n              background-color: #f8f9fa;\r\n              padding: 16px;\r\n              border-radius: 8px;\r\n              border: 1px solid #e9ecef;\r\n            }\r\n            \r\n            .colorblind-info h4 {\r\n              margin-top: 0;\r\n              margin-bottom: 12px;\r\n              color: #343a40;\r\n            }\r\n            \r\n            .colorblind-info ul {\r\n              margin-bottom: 20px;\r\n            }\r\n            \r\n            .colorblind-info li {\r\n              margin-bottom: 8px;\r\n              color: #495057;\r\n            }\r\n          </style>\r\n        `;\r\n\r\n        initColorBlindTester();\r\n      }, 500);\r\n    }\r\n\r\n    function initColorBlindTester() {\r\n      const typeSelect = document.getElementById('colorblind-type');\r\n      const strengthSlider = document.getElementById('colorblind-strength');\r\n      const strengthValue = document.getElementById('strength-value');\r\n      const samplesContainer = document.getElementById('colorblind-samples');\r\n      const imageUpload = document.getElementById('image-upload');\r\n      const originalPreview = document.getElementById('original-image-preview');\r\n      const simulationCanvas = document.getElementById('simulation-canvas');\r\n\r\n      const originalColors = [\r\n        { hex: '#E53935', name: '빨강' },\r\n        { hex: '#43A047', name: '녹색' },\r\n        { hex: '#1E88E5', name: '파랑' },\r\n        { hex: '#FDD835', name: '노랑' },\r\n        { hex: '#8E24AA', name: '보라' },\r\n        { hex: '#00ACC1', name: '청록' },\r\n        { hex: '#FF9800', name: '주황' },\r\n        { hex: '#6D4C41', name: '갈색' }\r\n      ];\r\n\r\n      const matrices = {\r\n        normal: [\r\n          1, 0, 0, 0, 0,\r\n          0, 1, 0, 0, 0,\r\n          0, 0, 1, 0, 0,\r\n          0, 0, 0, 1, 0\r\n        ],\r\n        protanopia: [\r\n          0.567, 0.433, 0, 0, 0,\r\n          0.558, 0.442, 0, 0, 0,\r\n          0, 0.242, 0.758, 0, 0,\r\n          0, 0, 0, 1, 0\r\n        ],\r\n        deuteranopia: [\r\n          0.625, 0.375, 0, 0, 0,\r\n          0.7, 0.3, 0, 0, 0,\r\n          0, 0.3, 0.7, 0, 0,\r\n          0, 0, 0, 1, 0\r\n        ],\r\n        tritanopia: [\r\n          0.95, 0.05, 0, 0, 0,\r\n          0, 0.433, 0.567, 0, 0,\r\n          0, 0.475, 0.525, 0, 0,\r\n          0, 0, 0, 1, 0\r\n        ],\r\n        achromatopsia: [\r\n          0.299, 0.587, 0.114, 0, 0,\r\n          0.299, 0.587, 0.114, 0, 0,\r\n          0.299, 0.587, 0.114, 0, 0,\r\n          0, 0, 0, 1, 0\r\n        ]\r\n      };\r\n\r\n      updateColorSamples();\r\n\r\n      typeSelect.addEventListener('change', updateColorSamples);\r\n      strengthSlider.addEventListener('input', function() {\r\n        strengthValue.textContent = this.value + '%';\r\n        updateColorSamples();\r\n      });\r\n\r\n      imageUpload.addEventListener('change', function(e) {\r\n        if (e.target.files && e.target.files[0]) {\r\n          const reader = new FileReader();\r\n          reader.onload = function(event) {\r\n            const img = new Image();\r\n            img.onload = function() {\r\n              originalPreview.innerHTML = '';\r\n              originalPreview.appendChild(img.cloneNode());\r\n              applyColorBlindFilter(img);\r\n            };\r\n            img.src = event.target.result;\r\n          };\r\n          reader.readAsDataURL(e.target.files[0]);\r\n        }\r\n      });\r\n\r\n      function updateColorSamples() {\r\n        const type = typeSelect.value;\r\n        const strength = parseFloat(strengthSlider.value) / 100;\r\n\r\n        samplesContainer.innerHTML = '';\r\n\r\n        originalColors.forEach(color => {\r\n          const sample = document.createElement('div');\r\n          sample.className = 'color-sample';\r\n          sample.textContent = `${color.hex} (${color.name})`;\r\n\r\n          const transformedColor = applyColorMatrix(color.hex, type, strength);\r\n          sample.style.backgroundColor = transformedColor;\r\n\r\n          const rgb = hexToRgb(transformedColor);\r\n          const brightness = (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\r\n          sample.style.color = brightness > 125 ? 'black' : 'white';\r\n          sample.style.textShadow = brightness > 125 ? '0 0 2px rgba(255,255,255,0.7)' : '0 0 2px rgba(0,0,0,0.7)';\r\n\r\n          samplesContainer.appendChild(sample);\r\n        });\r\n\r\n        const img = originalPreview.querySelector('img');\r\n        if (img) {\r\n          applyColorBlindFilter(img);\r\n        }\r\n      }\r\n\r\n      function applyColorMatrix(hexColor, type, strength) {\r\n        const rgb = hexToRgb(hexColor);\r\n        const matrix = matrices[type];\r\n\r\n        if (!matrix) return hexColor;\r\n\r\n        const blendedMatrix = [];\r\n        for (let i = 0; i < matrices.normal.length; i++) {\r\n          blendedMatrix[i] = matrices.normal[i] * (1 - strength) + matrix[i] * strength;\r\n        }\r\n\r\n        const r = rgb.r * blendedMatrix[0] + rgb.g * blendedMatrix[1] + rgb.b * blendedMatrix[2];\r\n        const g = rgb.r * blendedMatrix[5] + rgb.g * blendedMatrix[6] + rgb.b * blendedMatrix[7];\r\n        const b = rgb.r * blendedMatrix[10] + rgb.g * blendedMatrix[11] + rgb.b * blendedMatrix[12];\r\n\r\n        return rgbToHex(Math.round(r), Math.round(g), Math.round(b));\r\n      }\r\n\r\n      function applyColorBlindFilter(img) {\r\n        const type = typeSelect.value;\r\n        const strength = parseFloat(strengthSlider.value) / 100;\r\n        const canvas = simulationCanvas;\r\n        const ctx = canvas.getContext('2d');\r\n\r\n        canvas.width = img.width;\r\n        canvas.height = img.height;\r\n\r\n        ctx.drawImage(img, 0, 0, img.width, img.height);\r\n\r\n        if (type !== 'normal') {\r\n          const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n          const data = imageData.data;\r\n          const matrix = matrices[type];\r\n\r\n          const blendedMatrix = [];\r\n          for (let i = 0; i < matrices.normal.length; i++) {\r\n            blendedMatrix[i] = matrices.normal[i] * (1 - strength) + matrix[i] * strength;\r\n          }\r\n\r\n          for (let i = 0; i < data.length; i += 4) {\r\n            const r = data[i];\r\n            const g = data[i + 1];\r\n            const b = data[i + 2];\r\n\r\n            data[i] = r * blendedMatrix[0] + g * blendedMatrix[1] + b * blendedMatrix[2];\r\n            data[i + 1] = r * blendedMatrix[5] + g * blendedMatrix[6] + b * blendedMatrix[7];\r\n            data[i + 2] = r * blendedMatrix[10] + g * blendedMatrix[11] + b * blendedMatrix[12];\r\n          }\r\n\r\n          ctx.putImageData(imageData, 0, 0);\r\n        }\r\n      }\r\n\r\n      function hexToRgb(hex) {\r\n        hex = hex.replace(/^#/, '');\r\n        const bigint = parseInt(hex, 16);\r\n        return {\r\n          r: (bigint >> 16) & 255,\r\n          g: (bigint >> 8) & 255,\r\n          b: bigint & 255\r\n        };\r\n      }\r\n    }\r\n  })();\r\n"],"names":["document","getElementById","remove","removeHighlights","userApiKey","sessionStorage","getItem","prompt","alert","setItem","loadAxeCore","Promise","resolve","reject","window","axe","axeScript","createElement","src","onload","onerror","Error","head","appendChild","API_KEY","KWCAG22","perception","name","items","id","desc","operation","comprehension","robustness","UDL_PRINCIPLES","engagement","suggestions","representation","action","style","textContent","panel","cssText","innerHTML","body","currentX","currentY","initialX","initialY","header","querySelector","isDragging","xOffset","yOffset","setTranslate","xPos","yPos","panelWidth","offsetWidth","headerHeight","offsetHeight","innerWidth","innerHeight","left","top","position","addEventListener","e","target","closest","clientX","clientY","preventDefault","minimized","activateTab","tabId","colorblindContent","querySelectorAll","forEach","content","display","tab","classList","add","includes","checkColorContrast","analyzeWCAG","analyzeForUDL","setTimeout","typeSelect","strengthSlider","strengthValue","samplesContainer","imageUpload","originalPreview","simulationCanvas","originalColors","hex","matrices","normal","protanopia","deuteranopia","tritanopia","achromatopsia","updateColorSamples","type","value","strength","parseFloat","color","sample","className","concat","transformedColor","hexColor","rgb","hexToRgb","matrix","blendedMatrix","i","length","r","g","b","rgbToHex","Math","round","applyColorMatrix","backgroundColor","brightness","textShadow","img","applyColorBlindFilter","canvas","ctx","getContext","width","height","drawImage","imageData","getImageData","data","putImageData","replace","bigint","parseInt","this","files","reader","FileReader","event","Image","cloneNode","result","readAsDataURL","initColorBlindTester","chatInput","chatSendBtn","chatMessages","resetChatBtn","console","log","getAttribute","scrollToBottom","children","chatHistory","addBotMessage","downloadChatBtn","downloadChat","resetChat","sendChatMessage","key","MutationObserver","observe","childList","subtree","attributes","characterData","initChat","btn","results","c","fails","filter","aa","passes","total","pct","contrastGuide","infoIcon","tooltip","tabIndex","setAttribute","sum","tabContainer","tabButtons","button","pane","manualPickerTool","textColorPicker","textColorHex","bgColorPicker","bgColorHex","colorSample","contrastRatio","contrastStatus","textColorBtn","bgColorBtn","updateManualContrast","ratio","calculateContrast","parseColor","toFixed","error","click","toUpperCase","test","failPane","failItems","item","criteriaText","fs","fw","text","contrast","escapeHTML","elementHTML","bgElementHTML","onclick","contains","toggleBtn","codeContent","nextElementSibling","toggle","stopPropagation","el","scrollIntoView","behavior","block","passPane","passItems","labels","push","aaa","join","str","styleEl","displayContrastResults","Array","from","trim","s","getComputedStyle","visibility","opacity","offsetParent","map","bg","bgElement","p","parentElement","pb","tc","bc","cr","fontSize","fontWeight","large","outerHTML","split","slice","textColor","bgColor","toString","rgbMatch","match","startsWith","substring","calculateLuminance","_ref","_map2","_slicedToArray","v","pow","a","L1","L2","max","min","wcagContent","then","run","resultTypes","selectors","_loop","_Object$entries$_i","_Object$entries","_i","category","categorySection","images","imagesWithoutAlt","hasAttribute","status","message","elements","videos","tables","t","tablesWithoutTh","table","elementsWithPositiveTabindex","contrastFails","firstFailElement","interactiveElements","keyboardInaccessible","hasClick","hasKeyEvent","onkeydown","onkeyup","onkeypress","isDisabled","isInaccesible","tagName","skipLinks","toLowerCase","title","framesWithoutTitle","f","frame","inputs","input","inputsWithoutLabel","hasExplicitLabel","hasImplicitLabel","hasAriaLabel","hasAriaLabelledBy","hasTitle","hasInvalidNesting","_step","ids","duplicateIdElement","_iterator","_createForOfIteratorHelper","n","done","err","analyzeWCAGItem","axeRules","axeResults","ruleIds","violations","incomplete","mostSevere","sort","impactOrder","critical","serious","moderate","minor","impact","help","nodes","node","selector","Boolean","reduce","rule","getAxeResultsForRules","itemDiv","statusText","showElementBtn","Object","entries","bodyText","udlContent","pageContentSummary","requestData","documentElement","innerText","contents","parts","fetch","method","headers","JSON","stringify","response","ok","json","loadingDiv","resultDiv","aiText","candidates","formatAIResponse","errorDiv","formattedText","listItemRegex","matchAll","confirm","chatText","role","date","Date","fileName","getFullYear","getMonth","getDate","getHours","getMinutes","element","encodeURIComponent","removeChild","userMessage","some","keyword","addUserMessage","promptText","location","href","timeoutId","apiErrorCount","clearTimeout","messageDiv","scrollHeight","clientHeight","scrollTop","allImages","ensureScroll","count","arguments","undefined","onscroll","isNearBottom","container","requestAnimationFrame","resize","reportTitle","timestamp","toLocaleString","reportHtml","contrastTotal","contrastPassRate","itemText","ratioMatch","textColorChip","bgColorChip","contrastPasses","_i2","_Object$entries2","_Object$entries2$_i","_item$querySelector","_item$querySelector2","messageElement","_i3","_Object$entries3","_Object$entries3$_i","principle","suggestion","aiResponseDiv","testEngine","version","blob","Blob","url","URL","createObjectURL","download","toISOString","revokeObjectURL","downloadReport","statusDiv"],"sourceRoot":""}